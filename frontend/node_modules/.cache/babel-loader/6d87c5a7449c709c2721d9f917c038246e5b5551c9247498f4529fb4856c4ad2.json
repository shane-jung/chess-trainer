{"ast":null,"code":"const isOccupied = (board, index) => board[index] !== 0;\nconst getColor = (board, index) => {\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;else return 0;\n};\nconst getType = (board, index) => board[index] & 0b111;\nconst isSameColor = (board, from, to) => !(getColor(board, from) !== getColor(board, to));\nexport { isOccupied, getColor, getType, isSameColor };","map":{"version":3,"names":["isOccupied","board","index","getColor","pieceTypes","White","Black","getType","isSameColor","from","to"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/utils.js"],"sourcesContent":["const isOccupied = (board, index) => board[index] !== 0;\r\n\r\nconst getColor = (board, index) => {\r\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\r\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;\r\n  else return 0;\r\n};\r\n\r\nconst getType = (board, index) =>  board[index] & 0b111;\r\n\r\nconst isSameColor = (board, from, to) => !(getColor(board, from) !== getColor(board, to))\r\n\r\n\r\nexport {isOccupied, getColor, getType, isSameColor};"],"mappings":"AAAA,MAAMA,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,CAAC,KAAK,CAAC;AAEvD,MAAMC,QAAQ,GAAGA,CAACF,KAAK,EAAEC,KAAK,KAAK;EACjC,IAAID,KAAK,CAACC,KAAK,CAAC,GAAGE,UAAU,CAACC,KAAK,EAAE,OAAOD,UAAU,CAACC,KAAK;EAC5D,IAAIJ,KAAK,CAACC,KAAK,CAAC,GAAGE,UAAU,CAACE,KAAK,EAAE,OAAOF,UAAU,CAACE,KAAK,CAAC,KACxD,OAAO,CAAC;AACf,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACN,KAAK,EAAEC,KAAK,KAAMD,KAAK,CAACC,KAAK,CAAC,GAAG,KAAK;AAEvD,MAAMM,WAAW,GAAGA,CAACP,KAAK,EAAEQ,IAAI,EAAEC,EAAE,KAAK,EAAEP,QAAQ,CAACF,KAAK,EAAEQ,IAAI,CAAC,KAAKN,QAAQ,CAACF,KAAK,EAAES,EAAE,CAAC,CAAC;AAGzF,SAAQV,UAAU,EAAEG,QAAQ,EAAEI,OAAO,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}