{"ast":null,"code":"import pieces, { pieceTypes } from \"./pieces\";\nimport { isOccupied, getColor, isSameColor, movePiece } from \"./utils\";\nexport const calculateLegalMoves = function (FEN, color) {\n  let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const {\n    board\n  } = FEN;\n  const pieces = board.map((piece, index) => piece & color ? index : null).filter(piece => piece !== null);\n  const moves = pieces.map(index => {\n    return calculateLegalMovesForPiece(FEN, index, depth);\n  }).reduce((acc, val) => acc.concat(val), []);\n  return moves;\n};\nconst calculateLegalMovesForPiece = (FEN, index, depth) => {\n  let legalMoves;\n  const type = Object.keys(pieces).find(key => pieces[key] === FEN.board[index]);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      legalMoves = calculatePawnMoves(FEN, index);\n      break;\n    case \"r\":\n      legalMoves = calculateRookMoves(FEN, index);\n      break;\n    case \"n\":\n      legalMoves = calculateKnightMoves(FEN, index);\n      break;\n    case \"b\":\n      legalMoves = calculateBishopMoves(FEN, index);\n      break;\n    case \"q\":\n      legalMoves = calculateQueenMoves(FEN, index);\n      break;\n    case \"k\":\n      if (depth) return calculateCandidateKingMoves(FEN, index);else return calculateKingMoves(FEN, index);\n    default:\n      return [];\n  }\n  // return legalMoves;\n  if (depth) return legalMoves;\n  const {\n    board\n  } = FEN;\n  const color = getColor(board, index);\n  return legalMoves.filter(move => {\n    return !isKingAttacked({\n      ...FEN,\n      board: movePiece(FEN.board, index, move)\n    }, color);\n  });\n};\nfunction calculatePawnMoves(_ref, index) {\n  let {\n    board,\n    enPassant\n  } = _ref;\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  if (board[index] & pieceTypes.White) {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16) && !isOccupied(board, index + 8)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7) || index + 7 === enPassant) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9) || index + 9 === enPassant) candidateMoves.push(index + 9);\n  } else {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16) && !isOccupied(board, index - 8)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9) || index - 9 === enPassant) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7) || index - 7 === enPassant) candidateMoves.push(index - 7);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateRookMoves(_ref2, index) {\n  let {\n    board\n  } = _ref2;\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateBishopMoves(_ref3, index) {\n  let {\n    board\n  } = _ref3;\n  //  console.log(board);\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  // console.log(rank, file);\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  // console.log(legalMoves);\n  return legalMoves;\n}\nfunction calculateKnightMoves(_ref4, index) {\n  let {\n    board\n  } = _ref4;\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 6) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 6) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateQueenMoves(_ref5, index) {\n  let {\n    board\n  } = _ref5;\n  // console.log(board);\n  // console.log(board[index]);\n  return [...calculateBishopMoves({\n    board\n  }, index), ...calculateRookMoves({\n    board\n  }, index)];\n}\nfunction calculateCandidateKingMoves(FEN, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n\n  // console.log(candidateMoves);\n  return candidateMoves.filter(move => !isSameColor(FEN.board, index, move));\n}\nexport function calculateKingMoves(FEN, index) {\n  const {\n    board,\n    castling\n  } = FEN;\n  const candidateMoves = calculateCandidateKingMoves(FEN, index);\n  const white = board[index] & pieceTypes.White;\n  const legalMoves = candidateMoves.filter(move => {\n    return !isKingAttacked({\n      ...FEN,\n      board: movePiece(FEN.board, index, move)\n    }, move);\n  });\n  const color = getColor(board, index) === pieceTypes.White ? \"white\" : \"black\";\n  // console.log(color);\n  if (!isKingAttacked(FEN, index)) {\n    //if king and rook haven't moved yet.\n    // console.log(castling);\n    if (color === \"white\") {\n      if (castling.includes(\"K\") && legalMoves.includes(5) && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, index, 6)\n      }, 6) && board[6] === 0) {\n        legalMoves.push(6);\n      }\n      if (castling.includes(\"Q\") && legalMoves.includes(3) && board[2] === 0 && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, index, 2)\n      }, 2) && board[1] === 0) {\n        legalMoves.push(2);\n      }\n    } else {\n      if (castling.includes(\"k\") && legalMoves.includes(61) && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, index, 62)\n      }, 62) && board[62] === 0) {\n        legalMoves.push(62);\n      }\n      if (castling.includes(\"q\") && legalMoves.includes(59) && board[58] === 0 && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, index, 58)\n      }, 58) && board[57] === 0) {\n        legalMoves.push(58);\n      }\n    }\n  }\n  return legalMoves;\n}\nexport default calculateLegalMovesForPiece;\nexport function isKingAttacked(FEN, index) {\n  // console.log(\"isKingAttacked\", FEN, color);\n  const color = getColor(FEN.board, index);\n  const opponentColor = color & pieceTypes.White ? pieceTypes.Black : pieceTypes.White;\n  const opponentMoves = calculateLegalMoves(FEN, opponentColor, 1);\n  return opponentMoves.includes(index);\n}","map":{"version":3,"names":["pieces","pieceTypes","isOccupied","getColor","isSameColor","movePiece","calculateLegalMoves","FEN","color","depth","arguments","length","undefined","board","map","piece","index","filter","moves","calculateLegalMovesForPiece","reduce","acc","val","concat","legalMoves","type","Object","keys","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateCandidateKingMoves","calculateKingMoves","move","isKingAttacked","_ref","enPassant","rank","Math","floor","file","candidateMoves","White","push","_ref2","i","_ref3","min","_ref4","_ref5","castling","white","includes","opponentColor","Black","opponentMoves"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["import pieces, { pieceTypes } from \"./pieces\";\r\n\r\nimport { isOccupied, getColor, isSameColor, movePiece } from \"./utils\";\r\n\r\nexport const calculateLegalMoves = (FEN, color, depth = 0) => {\r\n  const { board } = FEN;\r\n\r\n  const pieces = board\r\n    .map((piece, index) => (piece & color ? index : null))\r\n    .filter((piece) => piece !== null);\r\n  const moves = pieces\r\n    .map((index) => {\r\n      return calculateLegalMovesForPiece(FEN, index, depth);\r\n    })\r\n    .reduce((acc, val) => acc.concat(val), []);\r\n\r\n  return moves;\r\n};\r\n\r\nconst calculateLegalMovesForPiece = (FEN, index, depth) => {\r\n  let legalMoves;\r\n  const type = Object.keys(pieces).find(\r\n    (key) => pieces[key] === FEN.board[index]\r\n  );\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      legalMoves = calculatePawnMoves(FEN, index);\r\n      break;\r\n    case \"r\":\r\n      legalMoves = calculateRookMoves(FEN, index);\r\n      break;\r\n    case \"n\":\r\n      legalMoves = calculateKnightMoves(FEN, index);\r\n      break;\r\n    case \"b\":\r\n      legalMoves = calculateBishopMoves(FEN, index);\r\n      break;\r\n    case \"q\":\r\n      legalMoves = calculateQueenMoves(FEN, index);\r\n      break;\r\n    case \"k\":\r\n      if (depth) return calculateCandidateKingMoves(FEN, index);\r\n      else return calculateKingMoves(FEN, index);\r\n    default:\r\n      return [];\r\n  }\r\n  // return legalMoves;\r\n  if (depth) return legalMoves;\r\n\r\n  const { board } = FEN;\r\n  const color = getColor(board, index);\r\n  return legalMoves.filter((move) => {\r\n    return !isKingAttacked(\r\n      { ...FEN, board: movePiece(FEN.board, index, move) },\r\n      color\r\n    );\r\n  });\r\n};\r\n\r\nfunction calculatePawnMoves({ board, enPassant }, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  if (board[index] & pieceTypes.White) {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (\r\n      rank === 1 &&\r\n      !isOccupied(board, index + 16) &&\r\n      !isOccupied(board, index + 8)\r\n    )\r\n      candidateMoves.push(index + 16);\r\n    if ((file > 0 && isOccupied(board, index + 7)) || index + 7 === enPassant)\r\n      candidateMoves.push(index + 7);\r\n    if ((file < 7 && isOccupied(board, index + 9)) || index + 9 === enPassant)\r\n      candidateMoves.push(index + 9);\r\n  } else {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (\r\n      rank === 6 &&\r\n      !isOccupied(board, index - 16) &&\r\n      !isOccupied(board, index - 8)\r\n    )\r\n      candidateMoves.push(index - 16);\r\n    if ((file > 0 && isOccupied(board, index - 9)) || index - 9 === enPassant)\r\n      candidateMoves.push(index - 9);\r\n    if ((file < 7 && isOccupied(board, index - 7)) || index - 7 === enPassant)\r\n      candidateMoves.push(index - 7);\r\n  }\r\n\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves({ board }, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves({ board }, index) {\r\n  //  console.log(board);\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  // console.log(rank, file);\r\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  // console.log(legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves({ board }, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 6) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 6) candidateMoves.push(index + 17);\r\n  }\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves({ board }, index) {\r\n  // console.log(board);\r\n  // console.log(board[index]);\r\n  return [\r\n    ...calculateBishopMoves({ board }, index),\r\n    ...calculateRookMoves({ board }, index),\r\n  ];\r\n}\r\n\r\nfunction calculateCandidateKingMoves(FEN, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  // console.log(candidateMoves);\r\n  return candidateMoves.filter((move) => !isSameColor(FEN.board, index, move));\r\n}\r\n\r\nexport function calculateKingMoves(FEN, index) {\r\n  const { board, castling } = FEN;\r\n  const candidateMoves = calculateCandidateKingMoves(FEN, index);\r\n  const white = board[index] & pieceTypes.White;\r\n  const legalMoves = candidateMoves.filter((move) => {\r\n    return !isKingAttacked(\r\n      { ...FEN, board: movePiece(FEN.board, index, move) },\r\n      move\r\n    );\r\n  });\r\n\r\n  const color = getColor(board, index) === pieceTypes.White ? \"white\" : \"black\";\r\n  // console.log(color);\r\n  if (!isKingAttacked(FEN, index)) {\r\n    //if king and rook haven't moved yet.\r\n    // console.log(castling);\r\n    if (color === \"white\") {\r\n      if (\r\n        castling.includes(\"K\") &&\r\n        legalMoves.includes(5) &&\r\n        !isKingAttacked({ ...FEN, board: movePiece(FEN.board, index, 6) }, 6) &&\r\n        board[6] === 0\r\n      ) {\r\n        legalMoves.push(6);\r\n      }\r\n      if (\r\n        castling.includes(\"Q\") &&\r\n        legalMoves.includes(3) &&\r\n        board[2] === 0 &&\r\n        !isKingAttacked({ ...FEN, board: movePiece(FEN.board, index, 2) }, 2) &&\r\n        board[1] === 0\r\n      ) {\r\n        legalMoves.push(2);\r\n      }\r\n    } else {\r\n      if (\r\n        castling.includes(\"k\") &&\r\n        legalMoves.includes(61) &&\r\n        !isKingAttacked(\r\n          { ...FEN, board: movePiece(FEN.board, index, 62) },\r\n          62\r\n        ) &&\r\n        board[62] === 0\r\n      ) {\r\n        legalMoves.push(62);\r\n      }\r\n      if (\r\n        castling.includes(\"q\") &&\r\n        legalMoves.includes(59) &&\r\n        board[58] === 0 &&\r\n        !isKingAttacked(\r\n          { ...FEN, board: movePiece(FEN.board, index, 58) },\r\n          58\r\n        ) &&\r\n        board[57] === 0\r\n      ) {\r\n        legalMoves.push(58);\r\n      }\r\n    }\r\n  }\r\n  return legalMoves;\r\n}\r\n\r\nexport default calculateLegalMovesForPiece;\r\n\r\nexport function isKingAttacked(FEN, index) {\r\n  // console.log(\"isKingAttacked\", FEN, color);\r\n  const color = getColor(FEN.board, index);\r\n  const opponentColor =\r\n    color & pieceTypes.White ? pieceTypes.Black : pieceTypes.White;\r\n  const opponentMoves = calculateLegalMoves(FEN, opponentColor, 1);\r\n  return opponentMoves.includes(index);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}