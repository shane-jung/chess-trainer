{"ast":null,"code":"import pieces from \"./pieces\";\nexport default function decodeFEN(FEN) {\n  console.log(FEN);\n  return {};\n  // const components = FEN.split(\" \");\n\n  // const board = Array(64).fill(0);\n  // let file = 0;\n  // let rank = 7;\n\n  // [...components[0]].forEach((symbol) => {\n  //   if (symbol === \"/\") {\n  //     file = 0;\n  //     rank--;\n  //   } else {\n  //     if (!isNaN(parseInt(symbol, 10))) {\n  //       file += parseInt(symbol, 10);\n  //     } else {\n  //       board[rank * 8 + file] = pieces[symbol];\n  //       file++;\n  //     }\n  //   }\n  // });\n  // return {board, turn: components[1], castling: components[2], enPassant: components[3], halfMoveClock: components[4], fullMoveNumber: components[5]};\n}","map":{"version":3,"names":["pieces","decodeFEN","FEN","console","log"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/FENtoBoard.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nexport default function decodeFEN(FEN) {\r\n  console.log(FEN);\r\n  return {};\r\n  // const components = FEN.split(\" \");\r\n\r\n  // const board = Array(64).fill(0);\r\n  // let file = 0;\r\n  // let rank = 7;\r\n\r\n  // [...components[0]].forEach((symbol) => {\r\n  //   if (symbol === \"/\") {\r\n  //     file = 0;\r\n  //     rank--;\r\n  //   } else {\r\n  //     if (!isNaN(parseInt(symbol, 10))) {\r\n  //       file += parseInt(symbol, 10);\r\n  //     } else {\r\n  //       board[rank * 8 + file] = pieces[symbol];\r\n  //       file++;\r\n  //     }\r\n  //   }\r\n  // });\r\n  // return {board, turn: components[1], castling: components[2], enPassant: components[3], halfMoveClock: components[4], fullMoveNumber: components[5]};\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,eAAe,SAASC,SAASA,CAACC,GAAG,EAAE;EACrCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,OAAO,CAAC,CAAC;EACT;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}