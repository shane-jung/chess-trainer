{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst gameReducer = createSlice({\n  name: \"game\",\n  initialState: {\n    turn: \"w\",\n    board: Array(64).fill(0),\n    selected: null,\n    legalMoves: [],\n    history: [],\n    moveNumber: 0,\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n    FEN: {\n      board: Array(64).fill(0),\n      turn: \"w\",\n      castling: \"KQkq\",\n      enPassant: \"-\",\n      halfMoveClock: 0,\n      fullMoveNumber: 1\n    },\n    activePiece: null\n  },\n  reducers: {\n    setBoard: (state, action) => {\n      state.FEN = action.payload;\n    },\n    rotateTurn: (state, action) => {\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\n    },\n    setTurn: (state, action) => {\n      state.turn = action.payload;\n    },\n    setSelected: (state, action) => {\n      state.selected = action.payload;\n    },\n    setActivePiece: (state, action) => {\n      state.activePiece = action.payload;\n    },\n    setLegalMoves: (state, action) => {\n      state.legalMoves = action.payload;\n    },\n    setFen: (state, action) => {\n      state.FEN = action.payload;\n    },\n    recordMove: (state, action) => {\n      const {\n        move,\n        notation,\n        capturedPiece\n      } = action.payload;\n      // console.log(capturedPiece);\n      state.moveNumber = state.history.length + 1;\n      state.history.push(action.payload);\n    },\n    setMoveNumber: (state, action) => {\n      const newMoveNumber = Math.max(0, Math.min(action.payload + state.moveNumber, state.history.length));\n      console.log(\"SETTING MOVE NUMBER\", newMoveNumber);\n      state.moveNumber = newMoveNumber;\n      // for(let i = state.moveNumber; i < newMoveNumber; i++) {\n      //     const {move, notation, capturedPiece} = state.history[i];\n      //     // state.FEN = movePiece(state.FEN, move);\n      //     console.log(move,notation, capturedPiece, i)\n      // }\n    }\n  }\n});\n\nexport const selectBoard = state => state.game.board;\nexport const selectTurn = state => state.game.turn;\nexport const selectSelected = state => state.game.selected;\nexport const selectLegalMoves = state => state.game.legalMoves;\nexport const selectHistory = state => state.game.history;\nexport const selectMoveNumber = state => state.game.moveNumber;\nexport const selectStringFEN = state => state.game.stringFEN;\nexport const selectFen = state => state.game.FEN;\nexport const selectActivePiece = state => state.game.activePiece;\nexport const {\n  setBoard,\n  setTurn,\n  setSelected,\n  setLegalMoves,\n  recordMove,\n  rotateTurn,\n  setMoveNumber\n} = gameReducer.actions;\nexport default gameReducer.reducer;","map":{"version":3,"names":["createSlice","gameReducer","name","initialState","turn","board","Array","fill","selected","legalMoves","history","moveNumber","stringFEN","FEN","castling","enPassant","halfMoveClock","fullMoveNumber","activePiece","reducers","setBoard","state","action","payload","rotateTurn","setTurn","setSelected","setActivePiece","setLegalMoves","setFen","recordMove","move","notation","capturedPiece","length","push","setMoveNumber","newMoveNumber","Math","max","min","console","log","selectBoard","game","selectTurn","selectSelected","selectLegalMoves","selectHistory","selectMoveNumber","selectStringFEN","selectFen","selectActivePiece","actions","reducer"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/slices/game.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst gameReducer = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    turn: \"w\",\r\n    board: Array(64).fill(0),\r\n    selected: null,\r\n    legalMoves: [],\r\n    history: [],\r\n    moveNumber: 0,\r\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\r\n    FEN: {\r\n      board: Array(64).fill(0),\r\n      turn: \"w\",\r\n      castling: \"KQkq\",\r\n      enPassant: \"-\",\r\n      halfMoveClock: 0,\r\n      fullMoveNumber: 1,\r\n    },\r\n    activePiece: null,\r\n  },\r\n  reducers: {\r\n    setBoard: (state, action) => {\r\n      state.FEN = action.payload;\r\n    },\r\n    rotateTurn: (state, action) => {\r\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\r\n    },\r\n    setTurn: (state, action) => {\r\n      state.turn = action.payload;\r\n    },\r\n    setSelected: (state, action) => {\r\n      state.selected = action.payload;\r\n    },\r\n    setActivePiece: (state, action) => {\r\n      state.activePiece = action.payload;\r\n    },\r\n    setLegalMoves: (state, action) => {\r\n      state.legalMoves = action.payload;\r\n    },\r\n\r\n    setFen: (state, action) => {\r\n      state.FEN = action.payload;\r\n    },\r\n\r\n    recordMove: (state, action) => {\r\n        const {move, notation, capturedPiece} = action.payload;\r\n        // console.log(capturedPiece);\r\n        state.moveNumber = state.history.length + 1;\r\n\r\n        state.history.push(action.payload);\r\n    },\r\n\r\n    setMoveNumber: (state, action) => {\r\n        const newMoveNumber = Math.max(0, Math.min(action.payload + state.moveNumber, state.history.length));\r\n\r\n        console.log(\"SETTING MOVE NUMBER\", newMoveNumber);\r\n        state.moveNumber =  newMoveNumber;\r\n        // for(let i = state.moveNumber; i < newMoveNumber; i++) {\r\n        //     const {move, notation, capturedPiece} = state.history[i];\r\n        //     // state.FEN = movePiece(state.FEN, move);\r\n        //     console.log(move,notation, capturedPiece, i)\r\n        // }\r\n    }\r\n  },\r\n});\r\n\r\nexport const selectBoard = (state) => state.game.board;\r\nexport const selectTurn = (state) => state.game.turn;\r\nexport const selectSelected = (state) => state.game.selected;\r\nexport const selectLegalMoves = (state) => state.game.legalMoves;\r\nexport const selectHistory = (state) => state.game.history;\r\nexport const selectMoveNumber = (state) => state.game.moveNumber;\r\nexport const selectStringFEN = (state) => state.game.stringFEN;\r\nexport const selectFen = (state) => state.game.FEN;\r\nexport const selectActivePiece = (state) => state.game.activePiece;\r\n\r\nexport const { setBoard, setTurn, setSelected, setLegalMoves, recordMove, rotateTurn, setMoveNumber } =\r\n  gameReducer.actions;\r\n\r\nexport default gameReducer.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}