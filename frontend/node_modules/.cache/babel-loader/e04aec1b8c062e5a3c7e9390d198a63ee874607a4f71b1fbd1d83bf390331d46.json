{"ast":null,"code":"import pieces from \"./pieces\";\nconst calculateLegalMoves = (board, index) => {\n  let legalMoves = [];\n  const type = Object.keys(pieces).find(key => pieces[key] === board[index]);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      return calculatePawnMoves(board, index);\n    case \"r\":\n      return calculateRookMoves(board, index);\n    case \"n\":\n      return calculateKnightMoves(board, index);\n    case \"b\":\n      return calculateBishopMoves(board, index);\n    case \"q\":\n      return calculateQueenMoves(board, index);\n    case \"k\":\n      return calculateKingMoves(board, index);\n    default:\n      return [];\n  }\n};\nfunction isOccupied(board, index) {\n  return board[index] !== 0;\n}\nfunction isSameColor(board, index1, index2) {\n  return board[index1] & board[index2] & 0b10000 || board[index1] & board[index2] & 0b1000;\n}\nfunction calculatePawnMoves(board, index) {\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\n  if (color === \"b\") {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9)) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7)) candidateMoves.push(index - 7);\n  } else {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7)) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9)) candidateMoves.push(index + 9);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateRookMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  // console.log(legalMoves);\n  return legalMoves;\n}\nfunction calculateBishopMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < file + 1; i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateKnightMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 6) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 6) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  console.log(index, legalMoves);\n  return legalMoves;\n}\nfunction calculateQueenMoves(board, index) {\n  return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\n}\nfunction calculateKingMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nexport default calculateLegalMoves;","map":{"version":3,"names":["pieces","calculateLegalMoves","board","index","legalMoves","type","Object","keys","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateKingMoves","isOccupied","isSameColor","index1","index2","rank","Math","floor","file","candidateMoves","color","push","filter","move","i","min","console","log"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nconst calculateLegalMoves = (board, index) => {\r\n  let legalMoves = [];\r\n  const type = Object.keys(pieces).find((key) => pieces[key] === board[index]);\r\n\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      return calculatePawnMoves(board, index);\r\n    case \"r\":\r\n      return calculateRookMoves(board, index);\r\n    case \"n\":\r\n      return calculateKnightMoves(board, index);\r\n    case \"b\":\r\n      return calculateBishopMoves(board, index);\r\n\r\n    case \"q\":\r\n      return calculateQueenMoves(board, index);\r\n    case \"k\":\r\n      return calculateKingMoves(board, index);\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nfunction isOccupied(board, index) {\r\n  return board[index] !== 0;\r\n}\r\n\r\nfunction isSameColor(board, index1, index2) {\r\n  return (\r\n    board[index1] & board[index2] & 0b10000 ||\r\n    board[index1] & board[index2] & 0b1000\r\n  );\r\n}\r\n\r\nfunction calculatePawnMoves(board, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\r\n  if (color === \"b\") {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (rank === 6 && !isOccupied(board, index - 16))\r\n      candidateMoves.push(index - 16);\r\n    if (file > 0 && isOccupied(board, index - 9))\r\n      candidateMoves.push(index - 9);\r\n    if (file < 7 && isOccupied(board, index - 7))\r\n      candidateMoves.push(index - 7);\r\n  } else {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (rank === 1 && !isOccupied(board, index + 16))\r\n      candidateMoves.push(index + 16);\r\n    if (file > 0 && isOccupied(board, index + 7))\r\n      candidateMoves.push(index + 7);\r\n    if (file < 7 && isOccupied(board, index + 9))\r\n      candidateMoves.push(index + 9);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  // console.log(legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < file + 1; i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 6) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 6) candidateMoves.push(index + 17);\r\n  }\r\n\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  console.log(index, legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves(board, index) {\r\n  return [\r\n    ...calculateBishopMoves(board, index),\r\n    ...calculateRookMoves(board, index),\r\n  ];\r\n}\r\n\r\nfunction calculateKingMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nexport default calculateLegalMoves;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}