{"ast":null,"code":"import pieces from \"./pieces\";\nexport const calculateLegalMoves = function (board, color) {\n  let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const pieces = board.map((piece, index) => piece & color ? index : null).filter(piece => piece !== null);\n  const moves = pieces.map(index => {\n    return calculateLegalMovesForPiece(board, index, depth).filter(move => !isKingAttacked(movePiece(board, index, move), move, color));\n  }).reduce((acc, val) => acc.concat(val), []);\n  return moves;\n};\nconst calculateLegalMovesForPiece = (board, index, depth) => {\n  const type = Object.keys(pieces).find(key => pieces[key] === board[index]);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      return calculatePawnMoves(board, index);\n    case \"r\":\n      return calculateRookMoves(board, index);\n    case \"n\":\n      return calculateKnightMoves(board, index);\n    case \"b\":\n      return calculateBishopMoves(board, index);\n    case \"q\":\n      return calculateQueenMoves(board, index);\n    case \"k\":\n      if (depth) return calculateCandidateKingMoves(board, index);else return calculateKingMoves(board, index);\n    default:\n      return [];\n  }\n};\nfunction isOccupied(board, index) {\n  return board[index] !== 0;\n}\nfunction isSameColor(board, index1, index2) {\n  return board[index1] & board[index2] & 16 || board[index1] & board[index2] & 8;\n}\nfunction calculatePawnMoves(board, index) {\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  if (board[index] & 8) {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9)) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7)) candidateMoves.push(index - 7);\n  } else {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7)) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9)) candidateMoves.push(index + 9);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateRookMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateBishopMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateKnightMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 6) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 6) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateQueenMoves(board, index) {\n  return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\n}\nfunction calculateCandidateKingMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n  return candidateMoves.filter(move => !isSameColor(board, index, move));\n}\nexport function calculateKingMoves(board, index) {\n  const candidateMoves = calculateCandidateKingMoves(board, index);\n  const white = board[index] & 16;\n  const legalMoves = candidateMoves.filter(move => {\n    return !isKingAttacked(movePiece(board, index, move), move, board[index] & 16);\n  });\n  if (true && !isKingAttacked(board, index, white)) {\n    //if king and rook haven't moved yet.\n    if (white) {\n      if (legalMoves.includes(5) && !isKingAttacked(movePiece(board, index, 6), 6, white) && board[6] === 0) {\n        legalMoves.push(6);\n      }\n      if (legalMoves.includes(3) && board[2] === 0 && !isKingAttacked(movePiece(board, index, 2), 2, white) && board[1] === 0) {\n        legalMoves.push(2);\n      }\n    } else {\n      if (legalMoves.includes(61) && !isKingAttacked(movePiece(board, index, 62), 62, white) && board[62] === 0) {\n        legalMoves.push(62);\n      }\n      if (legalMoves.includes(59) && board[58] === 0 && !isKingAttacked(movePiece(board, index, 58), 58, white) && board[57] === 0) {\n        legalMoves.push(58);\n      }\n    }\n  }\n  return legalMoves;\n}\nexport default calculateLegalMovesForPiece;\nfunction movePiece(board, index, move) {\n  const newBoard = [...board];\n  newBoard[move] = newBoard[index];\n  newBoard[index] = 0;\n  return newBoard;\n}\nfunction isKingAttacked(board, index, color) {\n  const opponentColor = color & 16;\n  const opponentMoves = calculateLegalMoves(board, opponentColor, 1);\n  console.log(\"Opponent moves:\", opponentMoves);\n  return opponentMoves.includes(index);\n}","map":{"version":3,"names":["pieces","calculateLegalMoves","board","color","depth","arguments","length","undefined","map","piece","index","filter","moves","calculateLegalMovesForPiece","move","isKingAttacked","movePiece","reduce","acc","val","concat","type","Object","keys","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateCandidateKingMoves","calculateKingMoves","isOccupied","isSameColor","index1","index2","rank","Math","floor","file","candidateMoves","push","legalMoves","i","min","white","includes","newBoard","opponentColor","opponentMoves","console","log"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nexport const calculateLegalMoves = (board, color, depth = 0) => {\r\n  const pieces = board\r\n    .map((piece, index) => (piece & color ? index : null))\r\n    .filter((piece) => piece !== null);\r\n  const moves = pieces\r\n    .map((index) => {\r\n      return calculateLegalMovesForPiece(board, index, depth).filter((move)=> !isKingAttacked(movePiece(board, index, move), move, color));\r\n    })\r\n    .reduce((acc, val) => acc.concat(val), [])\r\n   \r\n\r\n  return moves;\r\n};\r\n\r\nconst calculateLegalMovesForPiece = (board, index, depth) => {\r\n  const type = Object.keys(pieces).find((key) => pieces[key] === board[index]);\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      return calculatePawnMoves(board, index);\r\n    case \"r\":\r\n      return calculateRookMoves(board, index);\r\n    case \"n\":\r\n      return calculateKnightMoves(board, index);\r\n    case \"b\":\r\n      return calculateBishopMoves(board, index);\r\n    case \"q\":\r\n      return calculateQueenMoves(board, index);\r\n    case \"k\":\r\n      if (depth) return calculateCandidateKingMoves(board, index);\r\n      else return calculateKingMoves(board, index);\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nfunction isOccupied(board, index) {\r\n  return board[index] !== 0;\r\n}\r\n\r\nfunction isSameColor(board, index1, index2) {\r\n  return (\r\n    board[index1] & board[index2] & 16 ||\r\n    board[index1] & board[index2] & 8\r\n  );\r\n}\r\n\r\nfunction calculatePawnMoves(board, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  if (board[index] & 8) {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (rank === 6 && !isOccupied(board, index - 16))\r\n      candidateMoves.push(index - 16);\r\n    if (file > 0 && isOccupied(board, index - 9))\r\n      candidateMoves.push(index - 9);\r\n    if (file < 7 && isOccupied(board, index - 7))\r\n      candidateMoves.push(index - 7);\r\n  } else {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (rank === 1 && !isOccupied(board, index + 16))\r\n      candidateMoves.push(index + 16);\r\n    if (file > 0 && isOccupied(board, index + 7))\r\n      candidateMoves.push(index + 7);\r\n    if (file < 7 && isOccupied(board, index + 9))\r\n      candidateMoves.push(index + 9);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 6) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 6) candidateMoves.push(index + 17);\r\n  }\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves(board, index) {\r\n  return [\r\n    ...calculateBishopMoves(board, index),\r\n    ...calculateRookMoves(board, index),\r\n  ];\r\n}\r\n\r\nfunction calculateCandidateKingMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  return candidateMoves.filter((move) => !isSameColor(board, index, move));\r\n}\r\n\r\nexport function calculateKingMoves(board, index) {\r\n  const candidateMoves = calculateCandidateKingMoves(board, index);\r\n  const white = board[index] & 16;\r\n  const legalMoves = candidateMoves.filter((move) => {\r\n    return !isKingAttacked(\r\n      movePiece(board, index, move),\r\n      move,\r\n      board[index] & 16\r\n    );\r\n  });\r\n  if (true && !isKingAttacked(board, index, white)) {\r\n    //if king and rook haven't moved yet.\r\n    if (white) {\r\n      if (\r\n        legalMoves.includes(5) &&\r\n        !isKingAttacked(movePiece(board, index, 6), 6, white) &&\r\n        board[6] === 0\r\n      ) {\r\n        legalMoves.push(6);\r\n      }\r\n      if (\r\n        legalMoves.includes(3) &&\r\n        board[2] === 0 &&\r\n        !isKingAttacked(movePiece(board, index, 2), 2, white) &&\r\n        board[1] === 0\r\n      ) {\r\n        legalMoves.push(2);\r\n      }\r\n    } else {\r\n      if (\r\n        legalMoves.includes(61) &&\r\n        !isKingAttacked(movePiece(board, index, 62), 62, white) &&\r\n        board[62] === 0\r\n      ) {\r\n        legalMoves.push(62);\r\n      }\r\n      if (\r\n        legalMoves.includes(59) &&\r\n        board[58] === 0 &&\r\n        !isKingAttacked(movePiece(board, index, 58), 58, white) &&\r\n        board[57] === 0\r\n      ) {\r\n        legalMoves.push(58);\r\n      }\r\n    }\r\n  }\r\n  return legalMoves;\r\n}\r\n\r\nexport default calculateLegalMovesForPiece;\r\n\r\n\r\n\r\nfunction movePiece(board, index, move) {\r\n  const newBoard = [...board];\r\n  newBoard[move] = newBoard[index];\r\n  newBoard[index] = 0;\r\n  return newBoard;\r\n}\r\n\r\nfunction isKingAttacked(board, index, color) {\r\n  const opponentColor = color & 16;\r\n  const opponentMoves = calculateLegalMoves(board, opponentColor, 1);\r\n  console.log(\"Opponent moves:\", opponentMoves);\r\n  return opponentMoves.includes(index);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}