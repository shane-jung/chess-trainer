{"ast":null,"code":"import pieces from \"./pieces\";\nexport default function FENtoBoard(FEN) {\n  const board = Array.from(64).fill(0);\n  console.log(board);\n  let file = 0;\n  let rank = 7;\n  [...FEN].forEach(symbol => {\n    if (symbol === \"/\") {\n      file = 0;\n      rank--;\n    } else {\n      if (!isNaN(parseInt(symbol, 10))) {\n        file += parseInt(symbol, 10);\n      } else {\n        board[rank * 8 + file] = pieces[symbol];\n        file++;\n      }\n    }\n  });\n  return board;\n}\n_c = FENtoBoard;\nvar _c;\n$RefreshReg$(_c, \"FENtoBoard\");","map":{"version":3,"names":["pieces","FENtoBoard","FEN","board","Array","from","fill","console","log","file","rank","forEach","symbol","isNaN","parseInt","_c","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/FENtoBoard.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nexport default function FENtoBoard(FEN) {\r\n  const board = Array.from(64).fill(0);\r\n  console.log(board);\r\n  let file = 0;\r\n  let rank = 7;\r\n\r\n  [...FEN].forEach((symbol) => {\r\n    if (symbol === \"/\") {\r\n      file = 0;\r\n      rank--;\r\n    } else {\r\n      if (!isNaN(parseInt(symbol, 10))) {\r\n        file += parseInt(symbol, 10);\r\n      } else {\r\n        board[rank * 8 + file] = pieces[symbol];\r\n        file++;\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,eAAe,SAASC,UAAUA,CAACC,GAAG,EAAE;EACtC,MAAMC,KAAK,GAAGC,KAAK,CAACC,IAAI,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACpCC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB,IAAIM,IAAI,GAAG,CAAC;EACZ,IAAIC,IAAI,GAAG,CAAC;EAEZ,CAAC,GAAGR,GAAG,CAAC,CAACS,OAAO,CAAEC,MAAM,IAAK;IAC3B,IAAIA,MAAM,KAAK,GAAG,EAAE;MAClBH,IAAI,GAAG,CAAC;MACRC,IAAI,EAAE;IACR,CAAC,MAAM;MACL,IAAI,CAACG,KAAK,CAACC,QAAQ,CAACF,MAAM,EAAE,EAAE,CAAC,CAAC,EAAE;QAChCH,IAAI,IAAIK,QAAQ,CAACF,MAAM,EAAE,EAAE,CAAC;MAC9B,CAAC,MAAM;QACLT,KAAK,CAACO,IAAI,GAAG,CAAC,GAAGD,IAAI,CAAC,GAAGT,MAAM,CAACY,MAAM,CAAC;QACvCH,IAAI,EAAE;MACR;IACF;EACF,CAAC,CAAC;EACF,OAAON,KAAK;AACd;AAACY,EAAA,GApBuBd,UAAU;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}