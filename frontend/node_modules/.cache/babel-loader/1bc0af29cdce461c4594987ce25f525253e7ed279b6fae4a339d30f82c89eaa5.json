{"ast":null,"code":"import { pieceTypes } from \"./pieces\";\nconst isOccupied = (board, index) => board[index] !== 0;\nconst getColor = (board, index) => {\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;else return 0;\n};\nconst getType = (board, index) => board[index] & 0b111;\nconst isSameColor = (board, from, to) => !(getColor(board, from) !== getColor(board, to));\nexport { isOccupied, getColor, getType, isSameColor };","map":{"version":3,"names":["pieceTypes","isOccupied","board","index","getColor","White","Black","getType","isSameColor","from","to"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/utils.js"],"sourcesContent":["import { pieceTypes } from \"./pieces\";\r\n\r\n\r\nconst isOccupied = (board, index) => board[index] !== 0;\r\n\r\nconst getColor = (board, index) => {\r\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\r\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;\r\n  else return 0;\r\n};\r\n\r\nconst getType = (board, index) =>  board[index] & 0b111;\r\n\r\nconst isSameColor = (board, from, to) => !(getColor(board, from) !== getColor(board, to))\r\n\r\n\r\nexport {isOccupied, getColor, getType, isSameColor};"],"mappings":"AAAA,SAASA,UAAU,QAAQ,UAAU;AAGrC,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,CAAC,KAAK,CAAC;AAEvD,MAAMC,QAAQ,GAAGA,CAACF,KAAK,EAAEC,KAAK,KAAK;EACjC,IAAID,KAAK,CAACC,KAAK,CAAC,GAAGH,UAAU,CAACK,KAAK,EAAE,OAAOL,UAAU,CAACK,KAAK;EAC5D,IAAIH,KAAK,CAACC,KAAK,CAAC,GAAGH,UAAU,CAACM,KAAK,EAAE,OAAON,UAAU,CAACM,KAAK,CAAC,KACxD,OAAO,CAAC;AACf,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACL,KAAK,EAAEC,KAAK,KAAMD,KAAK,CAACC,KAAK,CAAC,GAAG,KAAK;AAEvD,MAAMK,WAAW,GAAGA,CAACN,KAAK,EAAEO,IAAI,EAAEC,EAAE,KAAK,EAAEN,QAAQ,CAACF,KAAK,EAAEO,IAAI,CAAC,KAAKL,QAAQ,CAACF,KAAK,EAAEQ,EAAE,CAAC,CAAC;AAGzF,SAAQT,UAAU,EAAEG,QAAQ,EAAEG,OAAO,EAAEC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}