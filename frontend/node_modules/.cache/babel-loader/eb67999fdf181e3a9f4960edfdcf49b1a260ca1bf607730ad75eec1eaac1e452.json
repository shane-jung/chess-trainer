{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst gameReducer = createSlice({\n  name: \"game\",\n  initialState: {\n    turn: \"w\",\n    board: Array(64).fill(0),\n    selected: null,\n    legalMoves: [],\n    history: [],\n    moveNumber: 0,\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n    FEN: {\n      board: Array(64).fill(0),\n      turn: \"w\",\n      castling: \"KQkq\",\n      enPassant: \"-\",\n      halfMoveClock: 0,\n      fullMoveNumber: 1\n    },\n    activePiece: null\n  },\n  reducers: {\n    setBoard: (state, action) => {\n      state.FEN = action.payload;\n    },\n    rotateTurn: (state, action) => {\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\n    },\n    movePiece: (state, action) => {\n      state.FEN.board[action.payload.to] = state.FEN.board[action.payload.from];\n      state.FEN.board[action.payload.from] = 0;\n      state.legalMoves = [];\n    },\n    setTurn: (state, action) => {\n      state.turn = action.payload;\n    },\n    setSelected: (state, action) => {\n      state.selected = action.payload;\n    },\n    setActivePiece: (state, action) => {\n      state.activePiece = action.payload;\n    },\n    setLegalMoves: (state, action) => {\n      state.legalMoves = action.payload;\n    },\n    removeCastlingRights: (state, action) => {\n      const side = action.payload;\n      [...side].forEach(el => state.FEN.castling = state.FEN.castling.replace(el, \"\"));\n    },\n    setFen: (state, action) => {\n      state.FEN = action.payload;\n    }\n  }\n});\nexport const selectBoard = state => state.game.board;\nexport const selectTurn = state => state.game.turn;\nexport const selectSelected = state => state.game.selected;\nexport const selectLegalMoves = state => state.game.legalMoves;\nexport const selectHistory = state => state.game.history;\nexport const selectMoveNumber = state => state.game.moveNumber;\nexport const selectStringFEN = state => state.game.stringFEN;\nexport const selectFen = state => state.game.FEN;\nexport const selectActivePiece = state => state.game.activePiece;\nexport const {\n  setBoard,\n  setTurn,\n  setSelected,\n  setLegalMoves,\n  rotateTurn\n} = gameReducer.actions;\nexport default gameReducer.reducer;","map":{"version":3,"names":["createSlice","gameReducer","name","initialState","turn","board","Array","fill","selected","legalMoves","history","moveNumber","stringFEN","FEN","castling","enPassant","halfMoveClock","fullMoveNumber","activePiece","reducers","setBoard","state","action","payload","rotateTurn","movePiece","to","from","setTurn","setSelected","setActivePiece","setLegalMoves","removeCastlingRights","side","forEach","el","replace","setFen","selectBoard","game","selectTurn","selectSelected","selectLegalMoves","selectHistory","selectMoveNumber","selectStringFEN","selectFen","selectActivePiece","actions","reducer"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/slices/game.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst gameReducer = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    turn: \"w\",\r\n    board: Array(64).fill(0),\r\n    selected: null,\r\n    legalMoves: [],\r\n    history: [],\r\n    moveNumber: 0,\r\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\r\n    FEN: {\r\n      board: Array(64).fill(0),\r\n      turn: \"w\",\r\n      castling: \"KQkq\",\r\n      enPassant: \"-\",\r\n      halfMoveClock: 0,\r\n      fullMoveNumber: 1,\r\n    },\r\n    activePiece: null,\r\n  },\r\n  reducers: {\r\n    setBoard: (state, action) => {\r\n      state.FEN = action.payload;\r\n    },\r\n    rotateTurn: (state, action) => {\r\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\r\n    },\r\n    movePiece: (state, action) => {\r\n      state.FEN.board[action.payload.to] = state.FEN.board[action.payload.from];\r\n      state.FEN.board[action.payload.from] = 0;\r\n      state.legalMoves = [];\r\n    },\r\n    setTurn: (state, action) => {\r\n      state.turn = action.payload;\r\n    },\r\n    setSelected: (state, action) => {\r\n      state.selected = action.payload;\r\n    },\r\n    setActivePiece: (state, action) => {\r\n      state.activePiece = action.payload;\r\n    },\r\n    setLegalMoves: (state, action) => {\r\n      state.legalMoves = action.payload;\r\n    },\r\n    removeCastlingRights: (state, action) => {\r\n      const side = action.payload;\r\n      [...side].forEach(\r\n        (el) => (state.FEN.castling = state.FEN.castling.replace(el, \"\"))\r\n      );\r\n    },\r\n\r\n    setFen: (state, action) => {    \r\n        state.FEN = action.payload;\r\n        }\r\n\r\n  },\r\n});\r\n\r\nexport const selectBoard = (state) => state.game.board;\r\nexport const selectTurn = (state) => state.game.turn;\r\nexport const selectSelected = (state) => state.game.selected;\r\nexport const selectLegalMoves = (state) => state.game.legalMoves;\r\nexport const selectHistory = (state) => state.game.history;\r\nexport const selectMoveNumber = (state) => state.game.moveNumber;\r\nexport const selectStringFEN = (state) => state.game.stringFEN;\r\nexport const selectFen = (state) => state.game.FEN;\r\n\r\nexport const selectActivePiece = (state) => state.game.activePiece;\r\n\r\nexport const { setBoard, setTurn, setSelected, setLegalMoves, rotateTurn } =\r\n  gameReducer.actions;\r\n\r\nexport default gameReducer.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}