{"ast":null,"code":"import pieces from \"./pieces\";\nexport default function initializeBoard() {\n  const canvas = document.getElementById(\"board\");\n  const ctx = canvas.getContext(\"2d\");\n  const boardWidth = canvas.width;\n  Array(8).fill(0).map((_, rank) => {\n    Array(8).fill(0).map((_, file) => {\n      ctx.fillStyle = (rank + file) % 2 === 0 ? \"#FFFFFF\" : \"#000000\";\n      ctx.fillRect(rank * boardWidth / 8, file * boardWidth / 8, boardWidth / 8, boardWidth / 8);\n    });\n  });\n}\nexport function drawBoard(board) {\n  const canvas = document.getElementById(\"board\");\n  const ctx = canvas.getContext(\"2d\");\n  const boardWidth = canvas.width;\n  const boardHeight = canvas.height;\n  board.map((piece, index) => {\n    console.log(Object.keys(pieces)[piece - 1]);\n    const img = new Image();\n    img.src = `./pieces/bP.svg`;\n    img.onload = () => ctx.drawImage(img, index % 8 * (boardWidth / 8), Math.floor(index / 8) * (boardHeight / 8), boardWidth / 8, boardHeight / 8);\n  });\n}","map":{"version":3,"names":["pieces","initializeBoard","canvas","document","getElementById","ctx","getContext","boardWidth","width","Array","fill","map","_","rank","file","fillStyle","fillRect","drawBoard","board","boardHeight","height","piece","index","console","log","Object","keys","img","Image","src","onload","drawImage","Math","floor"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/canvas.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nexport default function initializeBoard() {\r\n  const canvas = document.getElementById(\"board\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const boardWidth = canvas.width;\r\n  Array(8)\r\n    .fill(0)\r\n    .map((_, rank) => {\r\n      Array(8)\r\n        .fill(0)\r\n        .map((_, file) => {\r\n          ctx.fillStyle = (rank + file) % 2 === 0 ? \"#FFFFFF\" : \"#000000\";\r\n          ctx.fillRect(\r\n            (rank * boardWidth) / 8,\r\n            (file * boardWidth) / 8,\r\n            boardWidth / 8,\r\n            boardWidth / 8\r\n          );\r\n        });\r\n    });\r\n}\r\n\r\nexport function drawBoard(board) {\r\n  const canvas = document.getElementById(\"board\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n  const boardWidth = canvas.width;\r\n  const boardHeight = canvas.height;\r\n  board.map((piece, index) => {\r\n    console.log(Object.keys(pieces)[piece - 1]);\r\n    const img = new Image();\r\n    img.src = `./pieces/bP.svg`;\r\n    img.onload = () =>\r\n      ctx.drawImage(\r\n        img,\r\n        (index % 8) * (boardWidth / 8),\r\n        Math.floor(index / 8) * (boardHeight / 8),\r\n        boardWidth / 8,\r\n        boardHeight / 8\r\n      );\r\n  });\r\n}\r\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAE7B,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACnC,MAAMC,UAAU,GAAGL,MAAM,CAACM,KAAK;EAC/BC,KAAK,CAAC,CAAC,CAAC,CACLC,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,CAAC,EAAEC,IAAI,KAAK;IAChBJ,KAAK,CAAC,CAAC,CAAC,CACLC,IAAI,CAAC,CAAC,CAAC,CACPC,GAAG,CAAC,CAACC,CAAC,EAAEE,IAAI,KAAK;MAChBT,GAAG,CAACU,SAAS,GAAG,CAACF,IAAI,GAAGC,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,SAAS;MAC/DT,GAAG,CAACW,QAAQ,CACTH,IAAI,GAAGN,UAAU,GAAI,CAAC,EACtBO,IAAI,GAAGP,UAAU,GAAI,CAAC,EACvBA,UAAU,GAAG,CAAC,EACdA,UAAU,GAAG,CACf,CAAC;IACH,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AAEA,OAAO,SAASU,SAASA,CAACC,KAAK,EAAE;EAC/B,MAAMhB,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAC/C,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACnC,MAAMC,UAAU,GAAGL,MAAM,CAACM,KAAK;EAC/B,MAAMW,WAAW,GAAGjB,MAAM,CAACkB,MAAM;EACjCF,KAAK,CAACP,GAAG,CAAC,CAACU,KAAK,EAAEC,KAAK,KAAK;IAC1BC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAAC1B,MAAM,CAAC,CAACqB,KAAK,GAAG,CAAC,CAAC,CAAC;IAC3C,MAAMM,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAI,iBAAgB;IAC3BF,GAAG,CAACG,MAAM,GAAG,MACXzB,GAAG,CAAC0B,SAAS,CACXJ,GAAG,EACFL,KAAK,GAAG,CAAC,IAAKf,UAAU,GAAG,CAAC,CAAC,EAC9ByB,IAAI,CAACC,KAAK,CAACX,KAAK,GAAG,CAAC,CAAC,IAAIH,WAAW,GAAG,CAAC,CAAC,EACzCZ,UAAU,GAAG,CAAC,EACdY,WAAW,GAAG,CAChB,CAAC;EACL,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}