{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieces = {\n  p: 1,\n  n: 2,\n  b: 3,\n  r: 4,\n  q: 5,\n  k: 6,\n  P: 7,\n  N: 8,\n  B: 9,\n  R: 10,\n  Q: 11,\n  K: 12\n};\nconst ChessBoard = () => {\n  _s();\n  const [FEN] = useStatete(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  const [activePiece, setActivePiece] = useState(null);\n  const chessboard = [...Array(64)].map((_, index) => ({\n    row: Math.floor(index / 8),\n    col: index % 8,\n    color: (Math.floor(index / 8) + index % 8) % 2 === 0 ? \"white\" : \"gray\"\n  }));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: chessboard.map(_ref => {\n      let {\n        row,\n        col,\n        color\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: \"100%\",\n            backgroundColor: color\n          },\n          children: /*#__PURE__*/_jsxDEV(Piece, {\n            piece: piece,\n            setActivePiece: setActivePiece,\n            activePiece: activePiece,\n            index: index\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, `${row}-${col}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"gMaH61v9mtCmtBrfkYYH6YIXAs0=\", true);\n_c = ChessBoard;\nexport default ChessBoard;\nconst FENtoBoard = FEN => {\n  const board = Array.from(64).fill(0);\n  let file = 0;\n  let rank = 7;\n  [...FEN].forEach(symbol => {\n    if (symbol == \"/\") {\n      file = 0;\n      rank--;\n    } else {\n      if (!isNaN(parseInt(symbol, 10))) {\n        file += parseInt(symbol, 10);\n      } else {\n        board[rank * 8 + file] = pieces[symbol];\n        file++;\n      }\n    }\n  });\n  return board;\n};\n_c2 = FENtoBoard;\nfunction Piece(_ref2) {\n  _s2();\n  let {\n    piece,\n    setActivePiece,\n    index,\n    activePiece\n  } = _ref2;\n  const [color] = useState(piece > 6 ? \"w\" : \"b\");\n  const [type] = useState(Object.keys(pieces).find(key => pieces[key] === piece));\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"piece\" + (activePiece == index ? \" active\" : \"\"),\n    onMouseDown: () => setActivePiece(index),\n    src: `pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 12\n  }, this);\n}\n_s2(Piece, \"cFo9hcJZ1iyZq7cf3kqsfkPHC9A=\");\n_c3 = Piece;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChessBoard\");\n$RefreshReg$(_c2, \"FENtoBoard\");\n$RefreshReg$(_c3, \"Piece\");","map":{"version":3,"names":["Grid","Paper","useState","jsxDEV","_jsxDEV","pieces","p","n","b","r","q","k","P","N","B","R","Q","K","ChessBoard","_s","FEN","useStatete","activePiece","setActivePiece","chessboard","Array","map","_","index","row","Math","floor","col","color","container","spacing","children","_ref","item","xs","style","height","backgroundColor","Piece","piece","fileName","_jsxFileName","lineNumber","columnNumber","_c","FENtoBoard","board","from","fill","file","rank","forEach","symbol","isNaN","parseInt","_c2","_ref2","_s2","type","Object","keys","find","key","className","onMouseDown","src","toLowerCase","toUpperCase","_c3","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/ChessBoard.jsx"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst pieces = {\r\n    p : 1,\r\n    n : 2,\r\n    b : 3,\r\n    r : 4,\r\n    q : 5,\r\n    k : 6,\r\n    P : 7,\r\n    N : 8,\r\n    B : 9,\r\n    R : 10,\r\n    Q : 11,\r\n    K : 12,\r\n  }\r\n\r\nconst ChessBoard = () => {\r\n\r\n    const [FEN] = useStatete(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\r\n    const [activePiece, setActivePiece] = useState(null);\r\n  \r\n  const chessboard = [...Array(64)].map((_, index) => ({\r\n    row: Math.floor(index / 8),\r\n    col: index % 8,\r\n    color: (Math.floor(index / 8) + (index % 8)) % 2 === 0 ? \"white\" : \"gray\",\r\n  }));\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {chessboard.map(({ row, col, color }) => (\r\n        <Grid item key={`${row}-${col}`} xs={1}>\r\n          <Paper style={{ height: \"100%\", backgroundColor: color }} >\r\n            { \r\n                <Piece key={index} piece={piece} setActivePiece = {setActivePiece} activePiece= {activePiece} index={index}/>\r\n}\r\n            </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n\r\nconst FENtoBoard = (FEN) => {\r\n    const board = Array.from(64).fill(0);\r\n    let file = 0;\r\n    let rank = 7;\r\n\r\n    [...FEN].forEach((symbol) => {\r\n      if (symbol == \"/\") {\r\n        file = 0;\r\n        rank--;\r\n      } else {\r\n        if (!isNaN(parseInt(symbol, 10))) {\r\n          file += parseInt(symbol, 10);\r\n        } else {\r\n          board[rank * 8 + file] =  pieces[symbol];\r\n          file++;\r\n        }\r\n      }\r\n    });\r\n    return board;\r\n  };\r\n\r\n  function Piece({piece, setActivePiece, index, activePiece}) {\r\n    const [color ] = useState(piece > 6 ? \"w\" : \"b\");\r\n    const [type] = useState(Object.keys(pieces).find(key => pieces[key] === piece));\r\n  \r\n    \r\n    return <img className={\"piece\" + ((activePiece == index) ? \" active\" : \"\")} onMouseDown= {()=>setActivePiece(index)} src={`pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`}></img>;\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}