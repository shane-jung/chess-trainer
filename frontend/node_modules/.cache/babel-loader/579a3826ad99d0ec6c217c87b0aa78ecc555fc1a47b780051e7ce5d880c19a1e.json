{"ast":null,"code":"const spriteSheet = new Image();\nspriteSheet.src = '/pieces.jpg'; // Replace with your image path\nspriteSheet.onload = extractChessPieces;\nexport default function extractChessPieces() {\n  const canvas = document.getElementById('canvas');\n  console.log(canvas);\n  const ctx = canvas.getContext('2d');\n  const pieceWidth = 50; // Adjust the dimensions to match your piece size\n  const pieceHeight = 50;\n  canvas.width = pieceWidth;\n  canvas.height = pieceHeight;\n  const pieces = ['white-king', 'black-king', 'white-queen', 'black-queen']; // Add other piece names\n\n  pieces.forEach((piece, index) => {\n    const posX = index * pieceWidth % spriteSheet.width;\n    const posY = Math.floor(index * pieceWidth / spriteSheet.width) * pieceHeight;\n    ctx.clearRect(0, 0, pieceWidth, pieceHeight);\n    ctx.drawImage(spriteSheet, posX, posY, pieceWidth, pieceHeight, 0, 0, pieceWidth, pieceHeight);\n    const dataURL = canvas.toDataURL();\n    const img = new Image();\n    img.src = dataURL;\n    img.alt = piece;\n    document.body.appendChild(img); // Add the image to the desired location in your HTML\n  });\n}","map":{"version":3,"names":["spriteSheet","Image","src","onload","extractChessPieces","canvas","document","getElementById","console","log","ctx","getContext","pieceWidth","pieceHeight","width","height","pieces","forEach","piece","index","posX","posY","Math","floor","clearRect","drawImage","dataURL","toDataURL","img","alt","body","appendChild"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/Pieces.jsx"],"sourcesContent":["const spriteSheet = new Image();\r\nspriteSheet.src = '/pieces.jpg'; // Replace with your image path\r\nspriteSheet.onload = extractChessPieces;\r\n\r\nexport default function extractChessPieces() {\r\n  const canvas = document.getElementById('canvas');\r\n  console.log(canvas)\r\n  const ctx = canvas.getContext('2d');\r\n  \r\n  const pieceWidth = 50; // Adjust the dimensions to match your piece size\r\n  const pieceHeight = 50;\r\n  \r\n  canvas.width = pieceWidth;\r\n  canvas.height = pieceHeight;\r\n  \r\n  const pieces = ['white-king', 'black-king', 'white-queen', 'black-queen']; // Add other piece names\r\n  \r\n  pieces.forEach((piece, index) => {\r\n    const posX = (index * pieceWidth) % spriteSheet.width;\r\n    const posY = Math.floor((index * pieceWidth) / spriteSheet.width) * pieceHeight;\r\n    \r\n    ctx.clearRect(0, 0, pieceWidth, pieceHeight);\r\n    ctx.drawImage(spriteSheet, posX, posY, pieceWidth, pieceHeight, 0, 0, pieceWidth, pieceHeight);\r\n    \r\n    const dataURL = canvas.toDataURL();\r\n    \r\n    const img = new Image();\r\n    img.src = dataURL;\r\n    img.alt = piece;\r\n    \r\n    document.body.appendChild(img); // Add the image to the desired location in your HTML\r\n  });\r\n}\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,IAAIC,KAAK,CAAC,CAAC;AAC/BD,WAAW,CAACE,GAAG,GAAG,aAAa,CAAC,CAAC;AACjCF,WAAW,CAACG,MAAM,GAAGC,kBAAkB;AAEvC,eAAe,SAASA,kBAAkBA,CAAA,EAAG;EAC3C,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACnB,MAAMK,GAAG,GAAGL,MAAM,CAACM,UAAU,CAAC,IAAI,CAAC;EAEnC,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;EACvB,MAAMC,WAAW,GAAG,EAAE;EAEtBR,MAAM,CAACS,KAAK,GAAGF,UAAU;EACzBP,MAAM,CAACU,MAAM,GAAGF,WAAW;EAE3B,MAAMG,MAAM,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC,CAAC;;EAE3EA,MAAM,CAACC,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC/B,MAAMC,IAAI,GAAID,KAAK,GAAGP,UAAU,GAAIZ,WAAW,CAACc,KAAK;IACrD,MAAMO,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAEJ,KAAK,GAAGP,UAAU,GAAIZ,WAAW,CAACc,KAAK,CAAC,GAAGD,WAAW;IAE/EH,GAAG,CAACc,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEZ,UAAU,EAAEC,WAAW,CAAC;IAC5CH,GAAG,CAACe,SAAS,CAACzB,WAAW,EAAEoB,IAAI,EAAEC,IAAI,EAAET,UAAU,EAAEC,WAAW,EAAE,CAAC,EAAE,CAAC,EAAED,UAAU,EAAEC,WAAW,CAAC;IAE9F,MAAMa,OAAO,GAAGrB,MAAM,CAACsB,SAAS,CAAC,CAAC;IAElC,MAAMC,GAAG,GAAG,IAAI3B,KAAK,CAAC,CAAC;IACvB2B,GAAG,CAAC1B,GAAG,GAAGwB,OAAO;IACjBE,GAAG,CAACC,GAAG,GAAGX,KAAK;IAEfZ,QAAQ,CAACwB,IAAI,CAACC,WAAW,CAACH,GAAG,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}