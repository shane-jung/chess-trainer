{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\App.js\";\n// import Box from \"@mui/material/Box\";\n// import Button from \"@mui/material/Button\";\n// import Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // <Grid container xs={{width:\"1000px\", height: \"1000px\"}}>\n    //   {Array.from(new Array(8)).map((_, i) => (\n    //     <Grid key={i} container item>\n    //       {Array.from(new Array(8)).map((_, j) => (\n    //         <Grid\n    //           item\n    //           xs={1}\n    //           key={j}\n    //           sx={{\n    //             bgcolor: (i + j) % 2 ? \"aaaaaa\" : \"#333333\",\n    //             height: 100,\n    //             width: 100,\n    //             border: \"1px solid black\",\n    //           }}\n    //         />\n    //       ))}\n    //     </Grid>\n    //   ))}\n    // </Grid>\n    // 8 by 8 grid of squares\n    _jsxDEV(Grid, {\n      container: true,\n      xs: {\n        width: \"1000px\",\n        height: \"1000px\"\n      },\n      children: Array.from(new Array(8)).map((_, i) => /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        children: Array.from(new Array(8)).map((_, j) => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          sx: {\n            bgcolor: (i + j) % 2 ? \"aaaaaa\" : \"#333333\",\n            height: 100,\n            width: 100,\n            border: \"1px solid black\"\n          }\n        }, j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Grid","jsxDEV","_jsxDEV","App","container","xs","width","height","children","Array","from","map","_","i","item","j","sx","bgcolor","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/App.js"],"sourcesContent":["// import Box from \"@mui/material/Box\";\n// import Button from \"@mui/material/Button\";\n// import Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\n\nfunction App() {\n  return (\n    // <Grid container xs={{width:\"1000px\", height: \"1000px\"}}>\n    //   {Array.from(new Array(8)).map((_, i) => (\n    //     <Grid key={i} container item>\n    //       {Array.from(new Array(8)).map((_, j) => (\n    //         <Grid\n    //           item\n    //           xs={1}\n    //           key={j}\n    //           sx={{\n    //             bgcolor: (i + j) % 2 ? \"aaaaaa\" : \"#333333\",\n    //             height: 100,\n    //             width: 100,\n    //             border: \"1px solid black\",\n    //           }}\n    //         />\n    //       ))}\n    //     </Grid>\n    //   ))}\n    // </Grid>\n\n    // 8 by 8 grid of squares\n    <Grid container xs={{width:\"1000px\", height: \"1000px\"}}>\n      {Array.from(new Array(8)).map((_, i) => (\n        <Grid key={i} container item>\n          {Array.from(new Array(8)).map((_, j) => (\n            <Grid\n\n              item\n              xs={1}\n              key={j}\n              sx={{\n                bgcolor: (i + j) % 2 ? \"aaaaaa\" : \"#333333\",\n                height: 100,\n                width: 100,\n                border: \"1px solid black\",\n              }}\n            />\n          ))}\n        </Grid>\n      ))}\n    </Grid>\n    \n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACAD,OAAA,CAACF,IAAI;MAACI,SAAS;MAACC,EAAE,EAAE;QAACC,KAAK,EAAC,QAAQ;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAC,QAAA,EACpDC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACjCX,OAAA,CAACF,IAAI;QAASI,SAAS;QAACU,IAAI;QAAAN,QAAA,EACzBC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEG,CAAC,kBACjCb,OAAA,CAACF,IAAI;UAEHc,IAAI;UACJT,EAAE,EAAE,CAAE;UAENW,EAAE,EAAE;YACFC,OAAO,EAAE,CAACJ,CAAC,GAAGE,CAAC,IAAI,CAAC,GAAG,QAAQ,GAAG,SAAS;YAC3CR,MAAM,EAAE,GAAG;YACXD,KAAK,EAAE,GAAG;YACVY,MAAM,EAAE;UACV;QAAE,GANGH,CAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOP,CACF;MAAC,GAdOT,CAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAGX;AAACC,EAAA,GA7CQpB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}