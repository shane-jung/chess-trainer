{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState } from \"react\";\nimport FENtoBoard from \"./FENtoBoard\";\nimport Piece from \"./Piece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  const [activePiece, setActivePiece] = useState(null);\n  const board = [...FENtoBoard(FEN)];\n  console.log(board);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: Array.from(new Array(8)).map((_, rank) => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xs: 12,\n      spacing: 0,\n      children: Array.from(new Array(8)).map((_, file) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: \"100px\",\n            width: \"100px\",\n            backgroundColor: (rank + file) % 2 ? \"white\" : \"black\"\n          },\n          children: board[rank * 8 + file] !== 0 && /*#__PURE__*/_jsxDEV(Piece, {\n            piece: board[rank * 8 + file],\n            setActivePiece: setActivePiece,\n            activePiece: activePiece,\n            index: rank * 8 + file\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, `${file}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this))\n    }, `${rank}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"dRnAvVV/KLg01EGKs/67/r+/HGs=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["Grid","Paper","useState","FENtoBoard","Piece","jsxDEV","_jsxDEV","ChessBoard","_s","FEN","activePiece","setActivePiece","board","console","log","container","spacing","children","Array","from","map","_","rank","item","xs","file","style","height","width","backgroundColor","piece","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/ChessBoard.jsx"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\nimport FENtoBoard from \"./FENtoBoard\";\r\nimport Piece from \"./Piece\";\r\n\r\nconst ChessBoard = () => {\r\n  const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\r\n  const [activePiece, setActivePiece] = useState(null);\r\n  const board = [...FENtoBoard(FEN)];\r\n  console.log(board);\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {Array.from(new Array(8)).map((_, rank) => (\r\n        <Grid key={`${rank}`} container item xs={12} spacing={0}>\r\n          {Array.from(new Array(8)).map((_, file) => (\r\n            <Grid key={`${file}`} item xs={1}>\r\n              <Paper\r\n                style={{\r\n                  height: \"100px\",\r\n                  width: \"100px\",\r\n                  backgroundColor: (rank + file) % 2 ? \"white\" : \"black\",\r\n                }}\r\n              >\r\n                { ( board[rank * 8 + file] !== 0) && (\r\n                  <Piece\r\n                    piece={board[rank * 8 + file]}\r\n                    setActivePiece={setActivePiece}\r\n                    activePiece={activePiece}\r\n                    index={rank * 8 + file}\r\n                  />\r\n                )}\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,GAAG,CAAC,GAAGP,QAAQ,CAAC,6CAA6C,CAAC;EACrE,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMU,KAAK,GAAG,CAAC,GAAGT,UAAU,CAACM,GAAG,CAAC,CAAC;EAClCI,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,oBACEN,OAAA,CAACN,IAAI;IAACe,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEC,IAAI,kBACpChB,OAAA,CAACN,IAAI;MAAiBe,SAAS;MAACQ,IAAI;MAACC,EAAE,EAAE,EAAG;MAACR,OAAO,EAAE,CAAE;MAAAC,QAAA,EACrDC,KAAK,CAACC,IAAI,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,GAAG,CAAC,CAACC,CAAC,EAAEI,IAAI,kBACpCnB,OAAA,CAACN,IAAI;QAAiBuB,IAAI;QAACC,EAAE,EAAE,CAAE;QAAAP,QAAA,eAC/BX,OAAA,CAACL,KAAK;UACJyB,KAAK,EAAE;YACLC,MAAM,EAAE,OAAO;YACfC,KAAK,EAAE,OAAO;YACdC,eAAe,EAAE,CAACP,IAAI,GAAGG,IAAI,IAAI,CAAC,GAAG,OAAO,GAAG;UACjD,CAAE;UAAAR,QAAA,EAEEL,KAAK,CAACU,IAAI,GAAG,CAAC,GAAGG,IAAI,CAAC,KAAK,CAAC,iBAC9BnB,OAAA,CAACF,KAAK;YACJ0B,KAAK,EAAElB,KAAK,CAACU,IAAI,GAAG,CAAC,GAAGG,IAAI,CAAE;YAC9Bd,cAAc,EAAEA,cAAe;YAC/BD,WAAW,EAAEA,WAAY;YACzBqB,KAAK,EAAET,IAAI,GAAG,CAAC,GAAGG;UAAK;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI;MAAC,GAhBE,GAAEV,IAAK,EAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBd,CACP;IAAC,GApBQ,GAAEb,IAAK,EAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBd,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAjCID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}