{"ast":null,"code":"import pieces from \"./pieces\";\nconst calculateLegalMoves = (board, index) => {\n  let legalMoves = [];\n  const piece = board[index];\n  const color = piece & 0b10000 ? \"w\" : \"b\";\n  const type = Object.keys(pieces).find(key => pieces[key] === piece);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      legalMoves = calculatePawnMoves(board, index);\n      break;\n    case \"r\":\n      legalMoves = calculateRookMoves(board, index);\n      break;\n    case \"n\":\n      legalMoves = calculateKnightMoves(board, index);\n      break;\n    case \"b\":\n      legalMoves = calculateBishopMoves(board, index);\n      break;\n    case \"q\":\n      legalMoves = calculateQueenMoves(board, index);\n      break;\n    case \"k\":\n      legalMoves = calculateKingMoves(board, index);\n      break;\n  }\n  return legalMoves;\n};\nfunction isOccupied(board, index) {\n  return board[index] !== 0;\n}\nfunction isSameColor(board, index1, index2) {\n  return board[index1] & board[index2] & 0b10000 || board[index1] & board[index2] & 0b1000;\n}\nfunction calculatePawnMoves(board, index) {\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\n  if (color === \"b\") {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9)) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7)) candidateMoves.push(index - 7);\n  } else {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7)) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9)) candidateMoves.push(index + 9);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateRookMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateBishopMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < file + 1; i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateKnightMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 7) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 7) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  console.log(index, legalMoves);\n  return legalMoves;\n}\nfunction calculateQueenMoves(board, index) {\n  return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\n}\nfunction calculateKingMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nexport default calculateLegalMoves;","map":{"version":3,"names":["pieces","calculateLegalMoves","board","index","legalMoves","piece","color","type","Object","keys","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateKingMoves","isOccupied","isSameColor","index1","index2","rank","Math","floor","file","candidateMoves","push","filter","move","i","min","console","log"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nconst calculateLegalMoves = (board, index) => {\r\n  let legalMoves = [];\r\n\r\n  const piece = board[index];\r\n  const color = piece & 0b10000 ? \"w\" : \"b\";\r\n  const type = Object.keys(pieces).find((key) => pieces[key] === piece);\r\n\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      legalMoves = calculatePawnMoves(board, index);\r\n      break;\r\n    case \"r\":\r\n      legalMoves = calculateRookMoves(board, index);\r\n      break;\r\n    case \"n\":\r\n      legalMoves = calculateKnightMoves(board, index);\r\n      break;\r\n    case \"b\":\r\n      legalMoves = calculateBishopMoves(board, index);\r\n      break;\r\n    case \"q\":\r\n      legalMoves = calculateQueenMoves(board, index);\r\n      break;\r\n    case \"k\":\r\n      legalMoves = calculateKingMoves(board, index);\r\n      break;\r\n  }\r\n  return legalMoves;\r\n};\r\n\r\nfunction isOccupied(board, index) {\r\n  return board[index] !== 0;\r\n}\r\n\r\nfunction isSameColor(board, index1, index2) {\r\n  return (\r\n    board[index1] & board[index2] & 0b10000 ||\r\n    board[index1] & board[index2] & 0b1000\r\n  );\r\n}\r\n\r\nfunction calculatePawnMoves(board, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\r\n  if (color === \"b\") {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (rank === 6 && !isOccupied(board, index - 16))\r\n      candidateMoves.push(index - 16);\r\n    if (file > 0 && isOccupied(board, index - 9))\r\n      candidateMoves.push(index - 9);\r\n    if (file < 7 && isOccupied(board, index - 7))\r\n      candidateMoves.push(index - 7);\r\n  } else {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (rank === 1 && !isOccupied(board, index + 16))\r\n      candidateMoves.push(index + 16);\r\n    if (file > 0 && isOccupied(board, index + 7))\r\n      candidateMoves.push(index + 7);\r\n    if (file < 7 && isOccupied(board, index + 9))\r\n      candidateMoves.push(index + 9);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  \r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < file + 1; i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 7) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 7) candidateMoves.push(index + 17);\r\n  }\r\n\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  console.log(index, legalMoves)\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves(board, index) {\r\n  return [\r\n    ...calculateBishopMoves(board, index),\r\n    ...calculateRookMoves(board, index),\r\n  ];\r\n}\r\n\r\nfunction calculateKingMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nexport default calculateLegalMoves;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}