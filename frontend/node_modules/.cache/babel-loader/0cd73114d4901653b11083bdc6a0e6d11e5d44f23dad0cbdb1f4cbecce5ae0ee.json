{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pieces = {\n  p: 1,\n  n: 2,\n  b: 3,\n  r: 4,\n  q: 5,\n  k: 6,\n  P: 7,\n  N: 8,\n  B: 9,\n  R: 10,\n  Q: 11,\n  K: 12\n};\nconst ChessBoard = () => {\n  _s();\n  const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  const [activePiece, setActivePiece] = useState(null);\n  const board = FENtoBoard(FEN);\n  console.log(board);\n  const chessboard = [...Array(64)].map((_, index) => ({\n    row: Math.floor(index / 8),\n    col: index % 8,\n    color: (Math.floor(index / 8) + index % 8) % 2 === 0 ? \"white\" : \"gray\"\n  }));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: chessboard.map(_ref => {\n      let {\n        rank,\n        file,\n        color\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: \"100%\",\n            backgroundColor: color\n          },\n          children: board[rank * 8 + file] && /*#__PURE__*/_jsxDEV(Piece, {\n            piece: board[rank * 8 + file],\n            setActivePiece: setActivePiece,\n            activePiece: activePiece,\n            index: rank * 8 + file\n          }, `${rank}${file}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, `${rank}-${file}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"dRnAvVV/KLg01EGKs/67/r+/HGs=\");\n_c = ChessBoard;\nexport default ChessBoard;\nconst FENtoBoard = FEN => {\n  const board = Array.from(64).fill(0);\n  let file = 0;\n  let rank = 7;\n  [...FEN].forEach(symbol => {\n    if (symbol == \"/\") {\n      file = 0;\n      rank--;\n    } else {\n      if (!isNaN(parseInt(symbol, 10))) {\n        file += parseInt(symbol, 10);\n      } else {\n        board[rank * 8 + file] = pieces[symbol];\n        file++;\n      }\n    }\n  });\n  return board;\n};\n_c2 = FENtoBoard;\nfunction Piece(_ref2) {\n  _s2();\n  let {\n    piece,\n    setActivePiece,\n    index,\n    activePiece\n  } = _ref2;\n  const [color] = useState(piece > 6 ? \"w\" : \"b\");\n  const [type] = useState(Object.keys(pieces).find(key => pieces[key] === piece));\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"piece\" + (activePiece == index ? \" active\" : \"\"),\n    onMouseDown: () => setActivePiece(index),\n    src: `pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n}\n_s2(Piece, \"cFo9hcJZ1iyZq7cf3kqsfkPHC9A=\");\n_c3 = Piece;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChessBoard\");\n$RefreshReg$(_c2, \"FENtoBoard\");\n$RefreshReg$(_c3, \"Piece\");","map":{"version":3,"names":["Grid","Paper","useState","jsxDEV","_jsxDEV","pieces","p","n","b","r","q","k","P","N","B","R","Q","K","ChessBoard","_s","FEN","activePiece","setActivePiece","board","FENtoBoard","console","log","chessboard","Array","map","_","index","row","Math","floor","col","color","container","spacing","children","_ref","rank","file","item","xs","style","height","backgroundColor","Piece","piece","fileName","_jsxFileName","lineNumber","columnNumber","_c","from","fill","forEach","symbol","isNaN","parseInt","_c2","_ref2","_s2","type","Object","keys","find","key","className","onMouseDown","src","toLowerCase","toUpperCase","_c3","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/ChessBoard.jsx"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst pieces = {\r\n    p : 1,\r\n    n : 2,\r\n    b : 3,\r\n    r : 4,\r\n    q : 5,\r\n    k : 6,\r\n    P : 7,\r\n    N : 8,\r\n    B : 9,\r\n    R : 10,\r\n    Q : 11,\r\n    K : 12,\r\n  }\r\n\r\nconst ChessBoard = () => {\r\n\r\n    const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\r\n    const [activePiece, setActivePiece] = useState(null);\r\n    const board = FENtoBoard(FEN);\r\n    console.log(board);\r\n  const chessboard = [...Array(64)].map((_, index) => ({\r\n    row: Math.floor(index / 8),\r\n    col: index % 8,\r\n    color: (Math.floor(index / 8) + (index % 8)) % 2 === 0 ? \"white\" : \"gray\",\r\n  }));\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {chessboard.map(({ rank, file, color }) => (\r\n        <Grid item key={`${rank}-${file}`} xs={1}>\r\n          <Paper style={{ height: \"100%\", backgroundColor: color }} >\r\n            { \r\n                    (board[rank * 8 + file])  &&\r\n                <Piece key={`${rank}${file}`} piece={board[rank*8+file]} setActivePiece = {setActivePiece} activePiece= {activePiece} index={rank* 8 + file}/>\r\n}\r\n            </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n\r\nconst FENtoBoard = (FEN) => {\r\n    const board = Array.from(64).fill(0);\r\n    let file = 0;\r\n    let rank = 7;\r\n\r\n    [...FEN].forEach((symbol) => {\r\n      if (symbol == \"/\") {\r\n        file = 0;\r\n        rank--;\r\n      } else {\r\n        if (!isNaN(parseInt(symbol, 10))) {\r\n          file += parseInt(symbol, 10);\r\n        } else {\r\n          board[rank * 8 + file] =  pieces[symbol];\r\n          file++;\r\n        }\r\n      }\r\n    });\r\n    return board;\r\n  };\r\n\r\n  function Piece({piece, setActivePiece, index, activePiece}) {\r\n    const [color ] = useState(piece > 6 ? \"w\" : \"b\");\r\n    const [type] = useState(Object.keys(pieces).find(key => pieces[key] === piece));\r\n  \r\n    \r\n    return <img className={\"piece\" + ((activePiece == index) ? \" active\" : \"\")} onMouseDown= {()=>setActivePiece(index)} src={`pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`}></img>;\r\n  }\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}