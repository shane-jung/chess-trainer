{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\ChessBoard.jsx\",\n  _s = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { useState } from \"react\";\nimport Piece from \"./Piece\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  _s();\n  const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\n  const [activePiece, setActivePiece] = useState(null);\n  const board = FENtoBoard(FEN);\n  console.log(board);\n  const chessboard = [...Array(64)].map((_, index) => ({\n    row: Math.floor(index / 8),\n    col: index % 8,\n    color: (Math.floor(index / 8) + index % 8) % 2 === 0 ? \"white\" : \"gray\"\n  }));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: chessboard.map(_ref => {\n      let {\n        rank,\n        file,\n        color\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: \"100%\",\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, `${rank}-${file}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(ChessBoard, \"dRnAvVV/KLg01EGKs/67/r+/HGs=\");\n_c = ChessBoard;\nexport default ChessBoard;\nconst FENtoBoard = FEN => {\n  const board = Array.from(64).fill(0);\n  let file = 0;\n  let rank = 7;\n  [...FEN].forEach(symbol => {\n    if (symbol == \"/\") {\n      file = 0;\n      rank--;\n    } else {\n      if (!isNaN(parseInt(symbol, 10))) {\n        file += parseInt(symbol, 10);\n      } else {\n        board[rank * 8 + file] = pieces[symbol];\n        file++;\n      }\n    }\n  });\n  return board;\n};\n_c2 = FENtoBoard;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChessBoard\");\n$RefreshReg$(_c2, \"FENtoBoard\");","map":{"version":3,"names":["Grid","Paper","useState","Piece","jsxDEV","_jsxDEV","ChessBoard","_s","FEN","activePiece","setActivePiece","board","FENtoBoard","console","log","chessboard","Array","map","_","index","row","Math","floor","col","color","container","spacing","children","_ref","rank","file","item","xs","style","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","from","fill","forEach","symbol","isNaN","parseInt","pieces","_c2","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/ChessBoard.jsx"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useState } from \"react\";\r\n\r\nimport Piece from \"./Piece\";\r\n\r\n\r\nconst ChessBoard = () => {\r\n  const [FEN] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR\");\r\n  const [activePiece, setActivePiece] = useState(null);\r\n  const board = FENtoBoard(FEN);\r\n  console.log(board);\r\n  const chessboard = [...Array(64)].map((_, index) => ({\r\n    row: Math.floor(index / 8),\r\n    col: index % 8,\r\n    color: (Math.floor(index / 8) + (index % 8)) % 2 === 0 ? \"white\" : \"gray\",\r\n  }));\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {chessboard.map(({ rank, file, color }) => (\r\n        <Grid item key={`${rank}-${file}`} xs={1}>\r\n          <Paper style={{ height: \"100%\", backgroundColor: color }}>\r\n            \r\n          </Paper>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n\r\nconst FENtoBoard = (FEN) => {\r\n  const board = Array.from(64).fill(0);\r\n  let file = 0;\r\n  let rank = 7;\r\n\r\n  [...FEN].forEach((symbol) => {\r\n    if (symbol == \"/\") {\r\n      file = 0;\r\n      rank--;\r\n    } else {\r\n      if (!isNaN(parseInt(symbol, 10))) {\r\n        file += parseInt(symbol, 10);\r\n      } else {\r\n        board[rank * 8 + file] = pieces[symbol];\r\n        file++;\r\n      }\r\n    }\r\n  });\r\n  return board;\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}