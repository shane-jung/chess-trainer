{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nconst setBoardAction = board => {\n  return {\n    type: \"game/setBoard\",\n    payload: board\n  };\n};\nconst movePieceAction = _ref => {\n  let {\n    from,\n    to\n  } = _ref;\n  return {\n    type: \"game/movePiece\",\n    payload: {\n      from,\n      to\n    }\n  };\n};\nconst setActivePieceAction = piece => {\n  return {\n    type: \"game/setActivePiece\",\n    payload: piece\n  };\n};\nconst setTurnAction = turn => {\n  return {\n    type: \"game/setTurn\",\n    payload: turn\n  };\n};\nconst rotateTurnAction = () => {\n  return {\n    type: \"game/rotateTurn\"\n  };\n};\nconst setLegalMovesAction = moves => {\n  return {\n    type: \"game/setLegalMoves\",\n    payload: moves\n  };\n};\nconst setFenAction = FEN => {\n  return {\n    type: \"game/setFen\",\n    payload: FEN\n  };\n};\nconst recordMoveAction = (move, notation, capturedPiece) => {\n  return {\n    type: \"game/recordMove\",\n    payload: {\n      move,\n      notation,\n      capturedPiece\n    }\n  };\n};\nconst setMoveNumberAction = moveNumber => {\n  return {\n    type: \"game/setMoveNumber\",\n    payload: moveNumber\n  };\n};\nconst handleMoveAction = (from, to) => {\n  return {\n    type: \"game/handleMove\",\n    payload: {\n      from,\n      to\n    }\n  };\n};\nconst useAction = action => {\n  _s();\n  const dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(action(...arguments));\n  }, [dispatch, action]);\n};\n_s(useAction, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport default useAction;\nexport { setBoardAction, movePieceAction, setActivePieceAction, setTurnAction, setLegalMovesAction, rotateTurnAction, setFenAction, recordMoveAction, setMoveNumberAction };","map":{"version":3,"names":["useCallback","useDispatch","setBoardAction","board","type","payload","movePieceAction","_ref","from","to","setActivePieceAction","piece","setTurnAction","turn","rotateTurnAction","setLegalMovesAction","moves","setFenAction","FEN","recordMoveAction","move","notation","capturedPiece","setMoveNumberAction","moveNumber","handleMoveAction","useAction","action","_s","dispatch","arguments"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/actions/index.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst setBoardAction = (board) => {\r\n  return {\r\n    type: \"game/setBoard\",\r\n    payload: board,\r\n  };\r\n};\r\n\r\nconst movePieceAction = ({from, to}) => {\r\n  return {\r\n    type: \"game/movePiece\",\r\n    payload: { from, to },\r\n  };\r\n};\r\n\r\nconst setActivePieceAction = (piece) => {\r\n  return {\r\n    type: \"game/setActivePiece\",\r\n    payload: piece,\r\n  };\r\n};\r\n\r\nconst setTurnAction = (turn) => {\r\n  return {\r\n    type: \"game/setTurn\",\r\n    payload: turn,\r\n  };\r\n};\r\n\r\nconst rotateTurnAction = () => {\r\n  return {\r\n    type: \"game/rotateTurn\",\r\n  };\r\n};\r\n\r\nconst setLegalMovesAction = (moves) => {\r\n  return {\r\n    type: \"game/setLegalMoves\",\r\n    payload: moves,\r\n  };\r\n};\r\n\r\nconst setFenAction = (FEN) => {\r\n  return {\r\n    type: \"game/setFen\",\r\n    payload: FEN,\r\n  };\r\n};\r\n\r\nconst recordMoveAction = (move, notation, capturedPiece) => {\r\n  return {\r\n    type: \"game/recordMove\",\r\n    payload: {move, notation, capturedPiece},\r\n  };\r\n};\r\n\r\nconst setMoveNumberAction = (moveNumber) => {\r\n  return {\r\n    type: \"game/setMoveNumber\",\r\n    payload: moveNumber,\r\n  };\r\n}\r\n\r\nconst handleMoveAction = (from, to) => {\r\n  return {\r\n    type: \"game/handleMove\",\r\n    payload: {from, to},\r\n  };\r\n}\r\n\r\nconst useAction = (action) => {\r\n  const dispatch = useDispatch();\r\n  return useCallback(\r\n    (...args) => dispatch(action(...args)),\r\n    [dispatch, action]\r\n  );\r\n};\r\n\r\nexport default useAction;\r\n\r\nexport {\r\n  setBoardAction,\r\n  movePieceAction,\r\n  setActivePieceAction,\r\n  setTurnAction,\r\n  setLegalMovesAction,\r\n  rotateTurnAction,\r\n  setFenAction,\r\n  recordMoveAction,\r\n  setMoveNumberAction,\r\n};\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,OAAO;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,MAAMG,eAAe,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC,IAAI;IAAEC;EAAE,CAAC,GAAAF,IAAA;EACjC,OAAO;IACLH,IAAI,EAAE,gBAAgB;IACtBC,OAAO,EAAE;MAAEG,IAAI;MAAEC;IAAG;EACtB,CAAC;AACH,CAAC;AAED,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACtC,OAAO;IACLP,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAEM;EACX,CAAC;AACH,CAAC;AAED,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9B,OAAO;IACLT,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAEQ;EACX,CAAC;AACH,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACLV,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,MAAMW,mBAAmB,GAAIC,KAAK,IAAK;EACrC,OAAO;IACLZ,IAAI,EAAE,oBAAoB;IAC1BC,OAAO,EAAEW;EACX,CAAC;AACH,CAAC;AAED,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAC5B,OAAO;IACLd,IAAI,EAAE,aAAa;IACnBC,OAAO,EAAEa;EACX,CAAC;AACH,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,aAAa,KAAK;EAC1D,OAAO;IACLlB,IAAI,EAAE,iBAAiB;IACvBC,OAAO,EAAE;MAACe,IAAI;MAAEC,QAAQ;MAAEC;IAAa;EACzC,CAAC;AACH,CAAC;AAED,MAAMC,mBAAmB,GAAIC,UAAU,IAAK;EAC1C,OAAO;IACLpB,IAAI,EAAE,oBAAoB;IAC1BC,OAAO,EAAEmB;EACX,CAAC;AACH,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAACjB,IAAI,EAAEC,EAAE,KAAK;EACrC,OAAO;IACLL,IAAI,EAAE,iBAAiB;IACvBC,OAAO,EAAE;MAACG,IAAI;MAAEC;IAAE;EACpB,CAAC;AACH,CAAC;AAED,MAAMiB,SAAS,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,OAAOD,WAAW,CAChB;IAAA,OAAa6B,QAAQ,CAACF,MAAM,CAAC,GAAAG,SAAO,CAAC,CAAC;EAAA,GACtC,CAACD,QAAQ,EAAEF,MAAM,CACnB,CAAC;AACH,CAAC;AAACC,EAAA,CANIF,SAAS;EAAA,QACIzB,WAAW;AAAA;AAO9B,eAAeyB,SAAS;AAExB,SACExB,cAAc,EACdI,eAAe,EACfI,oBAAoB,EACpBE,aAAa,EACbG,mBAAmB,EACnBD,gBAAgB,EAChBG,YAAY,EACZE,gBAAgB,EAChBI,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}