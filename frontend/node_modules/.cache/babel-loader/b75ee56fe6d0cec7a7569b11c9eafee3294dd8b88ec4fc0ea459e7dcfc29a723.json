{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nconst setBoardAction = board => {\n  return {\n    type: \"game/setBoard\",\n    payload: board\n  };\n};\nconst movePieceAction = (from, to) => {\n  return {\n    type: \"game/movePiece\",\n    payload: {\n      from,\n      to\n    }\n  };\n};\nconst setActivePieceAction = piece => {\n  return {\n    type: \"game/setActivePiece\",\n    payload: piece\n  };\n};\nconst setTurnAction = turn => {\n  return {\n    type: \"game/setTurn\",\n    payload: turn\n  };\n};\nconst rotateTurnAction = () => {\n  return {\n    type: \"game/rotateTurnAction\"\n  };\n};\nconst setLegalMovesAction = moves => {\n  return {\n    type: \"game/setLegalMoves\",\n    payload: moves\n  };\n};\nconst useAction = action => {\n  _s();\n  const dispatch = useDispatch();\n  return useCallback(function () {\n    return dispatch(action(...arguments));\n  }, [dispatch, action]);\n};\n_s(useAction, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", false, function () {\n  return [useDispatch];\n});\nexport default useAction;\nexport { setBoardAction, movePieceAction, setActivePieceAction, setTurnAction, setLegalMovesAction, rotateTurnAction };","map":{"version":3,"names":["useCallback","useDispatch","setBoardAction","board","type","payload","movePieceAction","from","to","setActivePieceAction","piece","setTurnAction","turn","rotateTurnAction","setLegalMovesAction","moves","useAction","action","_s","dispatch","arguments"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/actions/index.js"],"sourcesContent":["import { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst setBoardAction = (board) => {\r\n  return {\r\n    type: \"game/setBoard\",\r\n    payload: board,\r\n  };\r\n};\r\n\r\nconst movePieceAction = (from, to) => {\r\n    return {\r\n      type: \"game/movePiece\",\r\n      payload: {from, to},\r\n    };\r\n  };\r\n\r\nconst setActivePieceAction = (piece) => {\r\n    return {\r\n      type: \"game/setActivePiece\",\r\n      payload: piece,\r\n    };\r\n  };\r\n\r\nconst setTurnAction = (turn) => {\r\n  return {\r\n    type: \"game/setTurn\",\r\n    payload: turn,\r\n  };\r\n};\r\n\r\nconst rotateTurnAction = () => {\r\n  return {\r\n    type: \"game/rotateTurnAction\",\r\n  };\r\n};\r\n\r\n\r\nconst setLegalMovesAction = (moves) => {\r\n    return {\r\n        type: \"game/setLegalMoves\",\r\n        payload: moves,\r\n    };\r\n};\r\n\r\n\r\nconst useAction = (action) => {\r\n  const dispatch = useDispatch();\r\n  return useCallback((...args) => dispatch(action(...args)), [dispatch, action]);\r\n};\r\n\r\nexport default useAction;\r\n\r\nexport { setBoardAction, movePieceAction, setActivePieceAction, setTurnAction, setLegalMovesAction, rotateTurnAction};\r\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAChC,OAAO;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,MAAMG,eAAe,GAAGA,CAACC,IAAI,EAAEC,EAAE,KAAK;EAClC,OAAO;IACLJ,IAAI,EAAE,gBAAgB;IACtBC,OAAO,EAAE;MAACE,IAAI;MAAEC;IAAE;EACpB,CAAC;AACH,CAAC;AAEH,MAAMC,oBAAoB,GAAIC,KAAK,IAAK;EACpC,OAAO;IACLN,IAAI,EAAE,qBAAqB;IAC3BC,OAAO,EAAEK;EACX,CAAC;AACH,CAAC;AAEH,MAAMC,aAAa,GAAIC,IAAI,IAAK;EAC9B,OAAO;IACLR,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAEO;EACX,CAAC;AACH,CAAC;AAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,OAAO;IACLT,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAGD,MAAMU,mBAAmB,GAAIC,KAAK,IAAK;EACnC,OAAO;IACHX,IAAI,EAAE,oBAAoB;IAC1BC,OAAO,EAAEU;EACb,CAAC;AACL,CAAC;AAGD,MAAMC,SAAS,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,OAAOD,WAAW,CAAC;IAAA,OAAamB,QAAQ,CAACF,MAAM,CAAC,GAAAG,SAAO,CAAC,CAAC;EAAA,GAAE,CAACD,QAAQ,EAAEF,MAAM,CAAC,CAAC;AAChF,CAAC;AAACC,EAAA,CAHIF,SAAS;EAAA,QACIf,WAAW;AAAA;AAI9B,eAAee,SAAS;AAExB,SAASd,cAAc,EAAEI,eAAe,EAAEG,oBAAoB,EAAEE,aAAa,EAAEG,mBAAmB,EAAED,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}