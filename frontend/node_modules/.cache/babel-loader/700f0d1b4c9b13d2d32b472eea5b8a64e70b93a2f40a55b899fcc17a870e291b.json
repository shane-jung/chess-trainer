{"ast":null,"code":"import { isKingAttacked } from \"./calculateMoves\";\nimport { pieceTypes } from \"./pieces\";\nconst isOccupied = (board, index) => board[index] !== 0;\nconst getColor = (board, index) => {\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;else return 0;\n};\nconst getType = (board, index) => board[index] & 0b111;\nconst isSameColor = (board, from, to) => !(getColor(board, from) !== getColor(board, to));\nconst movePiece = (board, from, to) => {\n  const newBoard = [...board];\n  newBoard[to] = newBoard[from];\n  newBoard[from] = 0;\n  return newBoard;\n};\nconst moveToAlgebraicChessNotation = (board, from, to) => {\n  console.log(board, from, to);\n  const type = getType(board, from);\n  const color = getColor(board, from);\n  console.log(type, color);\n  const isCheck = isKingAttacked(board, color == pieceTypes.White ? \"b\" : \"w\");\n  const isCapture = isOccupied(board, to);\n  const squares = \"abcdefgh\";\n  return `${type === pieceTypes.Pawn ? \"\" : type.toUpperCase()}${isCapture ? squares[from % 8] : \"\"}${isCapture ? \"x\" : \"\"}${squares[to % 8]}${isCheck ? \"+\" : \"\"}`;\n};\nexport { isOccupied, getColor, getType, isSameColor, movePiece, moveToAlgebraicChessNotation };","map":{"version":3,"names":["isKingAttacked","pieceTypes","isOccupied","board","index","getColor","White","Black","getType","isSameColor","from","to","movePiece","newBoard","moveToAlgebraicChessNotation","console","log","type","color","isCheck","isCapture","squares","Pawn","toUpperCase"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/utils.js"],"sourcesContent":["import { isKingAttacked } from \"./calculateMoves\";\r\nimport { pieceTypes } from \"./pieces\";\r\n\r\nconst isOccupied = (board, index) => board[index] !== 0;\r\n\r\nconst getColor = (board, index) => {\r\n  if (board[index] & pieceTypes.White) return pieceTypes.White;\r\n  if (board[index] & pieceTypes.Black) return pieceTypes.Black;\r\n  else return 0;\r\n};\r\n\r\nconst getType = (board, index) => board[index] & 0b111;\r\n\r\nconst isSameColor = (board, from, to) =>\r\n  !(getColor(board, from) !== getColor(board, to));\r\n\r\nconst movePiece = (board, from, to) => {\r\n  const newBoard = [...board];\r\n  newBoard[to] = newBoard[from];\r\n  newBoard[from] = 0;\r\n  return newBoard;\r\n};\r\n\r\nconst moveToAlgebraicChessNotation = (board, from, to) => {\r\n  console.log(board, from, to) ;\r\n  const type = getType(board, from);\r\n  const color = getColor(board, from);\r\n  console.log(type, color);\r\n  const isCheck = isKingAttacked(board, color == pieceTypes.White ? \"b\" : \"w\");\r\n  const isCapture = isOccupied(board, to);\r\n  const squares = \"abcdefgh\";\r\n\r\n\r\n  return `${type === pieceTypes.Pawn ? \"\" : type.toUpperCase()}${ \r\n    isCapture ? squares[from % 8] : \"\"\r\n  }${isCapture ? \"x\" : \"\"}${squares[to % 8]}${isCheck ? \"+\" : \"\"}`;\r\n}\r\n\r\nexport { isOccupied, getColor, getType, isSameColor, movePiece, moveToAlgebraicChessNotation};\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,UAAU,QAAQ,UAAU;AAErC,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,CAAC,KAAK,CAAC;AAEvD,MAAMC,QAAQ,GAAGA,CAACF,KAAK,EAAEC,KAAK,KAAK;EACjC,IAAID,KAAK,CAACC,KAAK,CAAC,GAAGH,UAAU,CAACK,KAAK,EAAE,OAAOL,UAAU,CAACK,KAAK;EAC5D,IAAIH,KAAK,CAACC,KAAK,CAAC,GAAGH,UAAU,CAACM,KAAK,EAAE,OAAON,UAAU,CAACM,KAAK,CAAC,KACxD,OAAO,CAAC;AACf,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACL,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,CAAC,GAAG,KAAK;AAEtD,MAAMK,WAAW,GAAGA,CAACN,KAAK,EAAEO,IAAI,EAAEC,EAAE,KAClC,EAAEN,QAAQ,CAACF,KAAK,EAAEO,IAAI,CAAC,KAAKL,QAAQ,CAACF,KAAK,EAAEQ,EAAE,CAAC,CAAC;AAElD,MAAMC,SAAS,GAAGA,CAACT,KAAK,EAAEO,IAAI,EAAEC,EAAE,KAAK;EACrC,MAAME,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;EAC3BU,QAAQ,CAACF,EAAE,CAAC,GAAGE,QAAQ,CAACH,IAAI,CAAC;EAC7BG,QAAQ,CAACH,IAAI,CAAC,GAAG,CAAC;EAClB,OAAOG,QAAQ;AACjB,CAAC;AAED,MAAMC,4BAA4B,GAAGA,CAACX,KAAK,EAAEO,IAAI,EAAEC,EAAE,KAAK;EACxDI,OAAO,CAACC,GAAG,CAACb,KAAK,EAAEO,IAAI,EAAEC,EAAE,CAAC;EAC5B,MAAMM,IAAI,GAAGT,OAAO,CAACL,KAAK,EAAEO,IAAI,CAAC;EACjC,MAAMQ,KAAK,GAAGb,QAAQ,CAACF,KAAK,EAAEO,IAAI,CAAC;EACnCK,OAAO,CAACC,GAAG,CAACC,IAAI,EAAEC,KAAK,CAAC;EACxB,MAAMC,OAAO,GAAGnB,cAAc,CAACG,KAAK,EAAEe,KAAK,IAAIjB,UAAU,CAACK,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;EAC5E,MAAMc,SAAS,GAAGlB,UAAU,CAACC,KAAK,EAAEQ,EAAE,CAAC;EACvC,MAAMU,OAAO,GAAG,UAAU;EAG1B,OAAQ,GAAEJ,IAAI,KAAKhB,UAAU,CAACqB,IAAI,GAAG,EAAE,GAAGL,IAAI,CAACM,WAAW,CAAC,CAAE,GAC3DH,SAAS,GAAGC,OAAO,CAACX,IAAI,GAAG,CAAC,CAAC,GAAG,EACjC,GAAEU,SAAS,GAAG,GAAG,GAAG,EAAG,GAAEC,OAAO,CAACV,EAAE,GAAG,CAAC,CAAE,GAAEQ,OAAO,GAAG,GAAG,GAAG,EAAG,EAAC;AAClE,CAAC;AAED,SAASjB,UAAU,EAAEG,QAAQ,EAAEG,OAAO,EAAEC,WAAW,EAAEG,SAAS,EAAEE,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}