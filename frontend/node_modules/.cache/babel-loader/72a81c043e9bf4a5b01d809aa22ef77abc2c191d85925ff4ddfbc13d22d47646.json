{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\ChessBoard.jsx\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = () => {\n  const chessboard = [...Array(64)].map((_, index) => ({\n    row: Math.floor(index / 8),\n    col: index % 8,\n    color: (Math.floor(index / 8) + index % 8) % 2 === 0 ? \"white\" : \"gray\"\n  }));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: chessboard.map(_ref => {\n      let {\n        row,\n        col,\n        color\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 1,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          style: {\n            height: \"100%\",\n            backgroundColor: color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, `${row}-${col}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["Grid","Paper","jsxDEV","_jsxDEV","ChessBoard","chessboard","Array","map","_","index","row","Math","floor","col","color","container","spacing","children","_ref","item","xs","style","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/ChessBoard.jsx"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst ChessBoard = () => {\r\n  const chessboard = [...Array(64)].map((_, index) => ({\r\n    row: Math.floor(index / 8),\r\n    col: index % 8,\r\n    color: (Math.floor(index / 8) + (index % 8)) % 2 === 0 ? \"white\" : \"gray\",\r\n  }));\r\n\r\n  return (\r\n    <Grid container spacing={0}>\r\n      {chessboard.map(({ row, col, color }) => (\r\n        <Grid item key={`${row}-${col}`} xs={1}>\r\n          <Paper style={{ height: \"100%\", backgroundColor: color }} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChessBoard;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,UAAU,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,MAAM;IACnDC,GAAG,EAAEC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;IAC1BI,GAAG,EAAEJ,KAAK,GAAG,CAAC;IACdK,KAAK,EAAE,CAACH,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC,GAAIA,KAAK,GAAG,CAAE,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG;EACrE,CAAC,CAAC,CAAC;EAEH,oBACEN,OAAA,CAACH,IAAI;IAACe,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBZ,UAAU,CAACE,GAAG,CAACW,IAAA;MAAA,IAAC;QAAER,GAAG;QAAEG,GAAG;QAAEC;MAAM,CAAC,GAAAI,IAAA;MAAA,oBAClCf,OAAA,CAACH,IAAI;QAACmB,IAAI;QAAuBC,EAAE,EAAE,CAAE;QAAAH,QAAA,eACrCd,OAAA,CAACF,KAAK;UAACoB,KAAK,EAAE;YAAEC,MAAM,EAAE,MAAM;YAAEC,eAAe,EAAET;UAAM;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD7C,GAAEjB,GAAI,IAAGG,GAAI,EAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEzB,CAAC;IAAA,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACC,EAAA,GAhBIxB,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}