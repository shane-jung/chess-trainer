{"ast":null,"code":"import pieces from \"./pieces\";\nexport const calculateLegalMoves = (board, color) => {\n  const selector = color == \"w\" ? 0b10000 : 0b1000;\n  const pieces = board.map((piece, index) => piece & selector ? index : null).filter(piece => piece !== null);\n  const moves = pieces.map(element => {\n    return calculateLegalMovesForPiece(board, element);\n  }).reduce((acc, val) => acc.concat(val), []);\n  const blackMoves = [...blackPieces].map(element => {\n    return calculateLegalMovesForPiece(board, element);\n  }).reduce((acc, val) => acc.concat(val), []);\n  console.log(blackMoves, whiteMoves);\n};\nconst calculateLegalMovesForPiece = (board, index) => {\n  const type = Object.keys(pieces).find(key => pieces[key] === board[index]);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      return calculatePawnMoves(board, index);\n    case \"r\":\n      return calculateRookMoves(board, index);\n    case \"n\":\n      return calculateKnightMoves(board, index);\n    case \"b\":\n      return calculateBishopMoves(board, index);\n    case \"q\":\n      return calculateQueenMoves(board, index);\n    case \"k\":\n      return calculateKingMoves(board, index);\n    default:\n      return [];\n  }\n};\nfunction isOccupied(board, index) {\n  return board[index] !== 0;\n}\nfunction isSameColor(board, index1, index2) {\n  return board[index1] & board[index2] & 0b10000 || board[index1] & board[index2] & 0b1000;\n}\nfunction calculatePawnMoves(board, index) {\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\n  if (color === \"b\") {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9)) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7)) candidateMoves.push(index - 7);\n  } else {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7)) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9)) candidateMoves.push(index + 9);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateRookMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  // console.log(legalMoves);\n  return legalMoves;\n}\nfunction calculateBishopMoves(board, index) {\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < file + 1; i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateKnightMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 6) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 6) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  console.log(index, legalMoves);\n  return legalMoves;\n}\nfunction calculateQueenMoves(board, index) {\n  return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\n}\nfunction calculateKingMoves(board, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nexport default calculateLegalMovesForPiece;","map":{"version":3,"names":["pieces","calculateLegalMoves","board","color","selector","map","piece","index","filter","moves","element","calculateLegalMovesForPiece","reduce","acc","val","concat","blackMoves","blackPieces","console","log","whiteMoves","type","Object","keys","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateKingMoves","isOccupied","isSameColor","index1","index2","rank","Math","floor","file","candidateMoves","push","legalMoves","move","i","min"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["import pieces from \"./pieces\";\r\n\r\nexport const calculateLegalMoves = (board, color) => {\r\n  const selector = color == \"w\" ? 0b10000 : 0b1000;\r\n  const pieces = board.map((piece, index) => (piece & selector) ? index : null).filter((piece) => piece !== null);\r\n\r\n  const moves = pieces.map(element => {\r\n    return calculateLegalMovesForPiece(board, element);\r\n  }).reduce((acc, val) => acc.concat(val), []);\r\n  \r\n  const blackMoves = [...blackPieces].map(element => {\r\n    return calculateLegalMovesForPiece(board, element);\r\n  }).reduce((acc, val) => acc.concat(val), []);\r\n\r\n  console.log(blackMoves, whiteMoves);\r\n}\r\n\r\nconst calculateLegalMovesForPiece= (board, index) => {\r\n  const type = Object.keys(pieces).find((key) => pieces[key] === board[index]);\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      return calculatePawnMoves(board, index);\r\n    case \"r\":\r\n      return calculateRookMoves(board, index);\r\n    case \"n\":\r\n      return calculateKnightMoves(board, index);\r\n    case \"b\":\r\n      return calculateBishopMoves(board, index);\r\n\r\n    case \"q\":\r\n      return calculateQueenMoves(board, index);\r\n    case \"k\":\r\n      return calculateKingMoves(board, index);\r\n    default:\r\n      return [];\r\n  }\r\n};\r\n\r\nfunction isOccupied(board, index) {\r\n  return board[index] !== 0;\r\n}\r\n\r\nfunction isSameColor(board, index1, index2) {\r\n  return (\r\n    board[index1] & board[index2] & 0b10000 ||\r\n    board[index1] & board[index2] & 0b1000\r\n  );\r\n}\r\n\r\nfunction calculatePawnMoves(board, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\r\n  if (color === \"b\") {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (rank === 6 && !isOccupied(board, index - 16))\r\n      candidateMoves.push(index - 16);\r\n    if (file > 0 && isOccupied(board, index - 9))\r\n      candidateMoves.push(index - 9);\r\n    if (file < 7 && isOccupied(board, index - 7))\r\n      candidateMoves.push(index - 7);\r\n  } else {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (rank === 1 && !isOccupied(board, index + 16))\r\n      candidateMoves.push(index + 16);\r\n    if (file > 0 && isOccupied(board, index + 7))\r\n      candidateMoves.push(index + 7);\r\n    if (file < 7 && isOccupied(board, index + 9))\r\n      candidateMoves.push(index + 9);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  // console.log(legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves(board, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < file + 1; i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 6) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 6) candidateMoves.push(index + 17);\r\n  }\r\n\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n\r\n  console.log(index, legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves(board, index) {\r\n  return [\r\n    ...calculateBishopMoves(board, index),\r\n    ...calculateRookMoves(board, index),\r\n  ];\r\n}\r\n\r\nfunction calculateKingMoves(board, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nexport default calculateLegalMovesForPiece;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}