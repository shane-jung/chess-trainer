{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shane\\\\Documents\\\\Projects\\\\chess-trainer\\\\src\\\\Piece.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport pieces from \"./pieces\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Piece(_ref) {\n  _s();\n  let {\n    piece: initial,\n    setActivePiece,\n    index,\n    activePiece\n  } = _ref;\n  const [color] = useState(initial > 6 ? \"w\" : \"b\");\n  const [type] = useState(Object.keys(pieces).find(key => pieces[key] === initial));\n  const handleDragStart = ev => {\n    setActivePiece(index);\n    console.log(piece);\n    const img = new Image();\n    img.src = piece.src;\n    //set the cursor to be a pointer when dragging\n    ev.dataTransfer.effectAllowed = \"move\";\n    ev.dataTransfer.setDragImage(img, 0, 0);\n  };\n  const piece = /*#__PURE__*/_jsxDEV(\"img\", {\n    draggable: true,\n    className: \"piece\" + (activePiece === index ? \" active\" : \"\"),\n    onDragStart: handleDragStart,\n    src: `pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`,\n    alt: \"Chess Piece\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n  return piece;\n}\n_s(Piece, \"NQxHQFY8PyO+L20V7shO2J04pQ0=\");\n_c = Piece;\nvar _c;\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"names":["useState","pieces","jsxDEV","_jsxDEV","Piece","_ref","_s","piece","initial","setActivePiece","index","activePiece","color","type","Object","keys","find","key","handleDragStart","ev","console","log","img","Image","src","dataTransfer","effectAllowed","setDragImage","draggable","className","onDragStart","toLowerCase","toUpperCase","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/Piece.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport pieces from \"./pieces\";\r\n\r\nexport default function Piece({ piece:initial, setActivePiece, index, activePiece }) {\r\n  const [color] = useState(initial > 6 ? \"w\" : \"b\");\r\n  const [type] = useState(\r\n    Object.keys(pieces).find((key) => pieces[key] === initial)\r\n  );\r\n\r\n\r\n  const handleDragStart = (ev) => {\r\n\r\n    setActivePiece(index);\r\n    console.log(piece);\r\n    const img = new Image();\r\n    img.src = piece.src;\r\n    //set the cursor to be a pointer when dragging\r\n    ev.dataTransfer.effectAllowed = \"move\";\r\n    ev.dataTransfer.setDragImage(img, 0, 0);\r\n  };\r\n\r\n  const piece = <img draggable className={\"piece\" + (activePiece === index ? \" active\" : \"\")} onDragStart={handleDragStart} src={`pieces/${color.toLowerCase()}${type.toUpperCase()}.svg`} alt= \"Chess Piece\" />;\r\n\r\n\r\n\r\n\r\n  return piece;\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,eAAe,SAASC,KAAKA,CAAAC,IAAA,EAAwD;EAAAC,EAAA;EAAA,IAAvD;IAAEC,KAAK,EAACC,OAAO;IAAEC,cAAc;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAAN,IAAA;EACjF,MAAM,CAACO,KAAK,CAAC,GAAGZ,QAAQ,CAACQ,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;EACjD,MAAM,CAACK,IAAI,CAAC,GAAGb,QAAQ,CACrBc,MAAM,CAACC,IAAI,CAACd,MAAM,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAKhB,MAAM,CAACgB,GAAG,CAAC,KAAKT,OAAO,CAC3D,CAAC;EAGD,MAAMU,eAAe,GAAIC,EAAE,IAAK;IAE9BV,cAAc,CAACC,KAAK,CAAC;IACrBU,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;IAClB,MAAMe,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;IACvBD,GAAG,CAACE,GAAG,GAAGjB,KAAK,CAACiB,GAAG;IACnB;IACAL,EAAE,CAACM,YAAY,CAACC,aAAa,GAAG,MAAM;IACtCP,EAAE,CAACM,YAAY,CAACE,YAAY,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACzC,CAAC;EAED,MAAMf,KAAK,gBAAGJ,OAAA;IAAKyB,SAAS;IAACC,SAAS,EAAE,OAAO,IAAIlB,WAAW,KAAKD,KAAK,GAAG,SAAS,GAAG,EAAE,CAAE;IAACoB,WAAW,EAAEZ,eAAgB;IAACM,GAAG,EAAG,UAASZ,KAAK,CAACmB,WAAW,CAAC,CAAE,GAAElB,IAAI,CAACmB,WAAW,CAAC,CAAE,MAAM;IAACC,GAAG,EAAE;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAK9M,OAAO9B,KAAK;AACd;AAACD,EAAA,CAxBuBF,KAAK;AAAAkC,EAAA,GAALlC,KAAK;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}