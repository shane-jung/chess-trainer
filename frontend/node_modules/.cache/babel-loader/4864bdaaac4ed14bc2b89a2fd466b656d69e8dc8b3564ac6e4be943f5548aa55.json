{"ast":null,"code":"import pieces, { pieceTypes, pieceValues } from \"./pieces\";\nimport { isOccupied, getPieceColor, isSameColor, movePiece } from \"./utils\";\nconst calculateLegalMovesForPiece = (FEN, index, depth) => {\n  let legalMoves;\n  const type = Object.keys(pieces).find(key => pieces[key] === FEN.board[index]);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      legalMoves = calculatePawnMoves(FEN, index);\n      break;\n    case \"r\":\n      legalMoves = calculateRookMoves(FEN, index);\n      break;\n    case \"n\":\n      legalMoves = calculateKnightMoves(FEN, index);\n      break;\n    case \"b\":\n      legalMoves = calculateBishopMoves(FEN, index);\n      break;\n    case \"q\":\n      legalMoves = calculateQueenMoves(FEN, index);\n      break;\n    case \"k\":\n      if (depth) return calculateCandidateKingMoves(FEN, index);else return calculateKingMoves(FEN, index);\n    default:\n      return [];\n  }\n  if (depth) return legalMoves;\n  const {\n    board\n  } = FEN;\n  const color = getPieceColor(board[index]);\n  return legalMoves.filter(move => {\n    return !isKingAttacked({\n      ...FEN,\n      board: movePiece(FEN.board, {\n        from: index,\n        to: move\n      })\n    }, color);\n  });\n};\nfunction calculatePawnMoves(_ref, index) {\n  let {\n    board,\n    enPassant\n  } = _ref;\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const candidateMoves = [];\n  if (board[index] & pieceTypes.White) {\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16) && !isOccupied(board, index + 8)) candidateMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 7) || index + 7 === enPassant) candidateMoves.push(index + 7);\n    if (file < 7 && isOccupied(board, index + 9) || index + 9 === enPassant) candidateMoves.push(index + 9);\n  } else {\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16) && !isOccupied(board, index - 8)) candidateMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 9) || index - 9 === enPassant) candidateMoves.push(index - 9);\n    if (file < 7 && isOccupied(board, index - 7) || index - 7 === enPassant) candidateMoves.push(index - 7);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board[index], board[move]));\n  return legalMoves;\n}\nfunction calculateRookMoves(_ref2, index) {\n  let {\n    board\n  } = _ref2;\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      candidateMoves.push(index + i);\n      break;\n    }\n    candidateMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      candidateMoves.push(index + 8 * i);\n      break;\n    }\n    candidateMoves.push(index + 8 * i);\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board[index], board[move]));\n  return legalMoves;\n}\nfunction calculateBishopMoves(_ref3, index) {\n  let {\n    board\n  } = _ref3;\n  //  console.log(board);\n  const candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  // console.log(rank, file);\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\n    //up and left\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\n    //down and right\n    candidateMoves.push(index + i + i * 8);\n    if (isOccupied(board, index + i + i * 8)) break;\n  }\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\n    //up and right\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\n    //down and left\n    candidateMoves.push(index - i + i * 8);\n    if (isOccupied(board, index - i + i * 8)) break;\n  }\n  const legalMoves = candidateMoves.filter(move => !isSameColor(board[index], board[move]));\n  // console.log(legalMoves);\n  return legalMoves;\n}\nfunction calculateKnightMoves(_ref4, index) {\n  let {\n    board\n  } = _ref4;\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    if (rank > 1) candidateMoves.push(index - 17);\n    if (rank < 6) candidateMoves.push(index + 15);\n  }\n  if (file > 1) {\n    if (rank > 0) candidateMoves.push(index - 10);\n    if (rank < 7) candidateMoves.push(index + 6);\n  }\n  if (file < 6) {\n    if (rank > 0) candidateMoves.push(index - 6);\n    if (rank < 7) candidateMoves.push(index + 10);\n  }\n  if (file < 7) {\n    if (rank > 1) candidateMoves.push(index - 15);\n    if (rank < 6) candidateMoves.push(index + 17);\n  }\n  let legalMoves = candidateMoves.filter(move => !isSameColor(board, index, move));\n  return legalMoves;\n}\nfunction calculateQueenMoves(_ref5, index) {\n  let {\n    board\n  } = _ref5;\n  return [...calculateBishopMoves({\n    board\n  }, index), ...calculateRookMoves({\n    board\n  }, index)];\n}\nfunction calculateCandidateKingMoves(FEN, index) {\n  let candidateMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    candidateMoves.push(index - 1);\n    if (rank > 0) candidateMoves.push(index - 9);\n    if (rank < 7) candidateMoves.push(index + 7);\n  }\n  if (file < 7) {\n    candidateMoves.push(index + 1);\n    if (rank > 0) candidateMoves.push(index - 7);\n    if (rank < 7) candidateMoves.push(index + 9);\n  }\n  if (rank > 0) candidateMoves.push(index - 8);\n  if (rank < 7) candidateMoves.push(index + 8);\n  return candidateMoves.filter(move => !isSameColor(FEN.board, index, move));\n}\nexport function calculateKingMoves(FEN, index) {\n  const {\n    board,\n    castling\n  } = FEN;\n  const candidateMoves = calculateCandidateKingMoves(FEN, index);\n  const color = getPieceColor(board[index]);\n  const legalMoves = candidateMoves.filter(move => {\n    return !isKingAttacked({\n      ...FEN,\n      board: movePiece(FEN.board, {\n        from: index,\n        to: move\n      })\n    }, color);\n  });\n  if (!isKingAttacked(FEN, color)) {\n    //if king and rook haven't moved yet.\n    if (color === pieceTypes.White) {\n      if (castling.includes(\"K\") && legalMoves.includes(5) && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, {\n          from: index,\n          to: 6\n        })\n      }, color) && board[6] === 0) {\n        legalMoves.push(6);\n      }\n      if (castling.includes(\"Q\") && legalMoves.includes(3) && board[2] === 0 && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, {\n          from: index,\n          to: 2\n        })\n      }, color) && board[1] === 0) {\n        legalMoves.push(2);\n      }\n    } else {\n      if (castling.includes(\"k\") && legalMoves.includes(61) && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, {\n          from: index,\n          to: 62\n        })\n      }, color) && board[62] === 0) {\n        legalMoves.push(62);\n      }\n      if (castling.includes(\"q\") && legalMoves.includes(59) && board[58] === 0 && !isKingAttacked({\n        ...FEN,\n        board: movePiece(FEN.board, {\n          from: index,\n          to: 58\n        })\n      }, color) && board[57] === 0) {\n        legalMoves.push(58);\n      }\n    }\n  }\n  return legalMoves;\n}\nexport const calculateLegalMoves = function (FEN, color) {\n  let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const {\n    board\n  } = FEN;\n  const pieces = board.map((piece, index) => piece & color ? index : null).filter(piece => piece !== null);\n  const moves = pieces.map(index => {\n    return calculateLegalMovesForPiece(FEN, index, depth);\n  }).reduce((acc, val) => acc.concat(val), []);\n  return moves;\n};\nexport default calculateLegalMovesForPiece;\nexport function isKingAttacked(FEN, color) {\n  const index = FEN.board.indexOf(color | pieceTypes.King);\n  const opponentColor = color & pieceTypes.White ? pieceTypes.Black : pieceTypes.White;\n  const opponentMoves = calculateLegalMoves(FEN, opponentColor, 1);\n  return opponentMoves.includes(index);\n}","map":{"version":3,"names":["pieces","pieceTypes","pieceValues","isOccupied","getPieceColor","isSameColor","movePiece","calculateLegalMovesForPiece","FEN","index","depth","legalMoves","type","Object","keys","find","key","board","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateCandidateKingMoves","calculateKingMoves","color","filter","move","isKingAttacked","from","to","_ref","enPassant","rank","Math","floor","file","candidateMoves","White","push","_ref2","i","_ref3","min","_ref4","_ref5","castling","includes","calculateLegalMoves","arguments","length","undefined","map","piece","moves","reduce","acc","val","concat","indexOf","King","opponentColor","Black","opponentMoves"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/frontend/src/calculateMoves.js"],"sourcesContent":["import pieces, { pieceTypes, pieceValues} from \"./pieces\";\r\n\r\nimport { isOccupied, getPieceColor, isSameColor, movePiece } from \"./utils\";\r\n\r\nconst calculateLegalMovesForPiece = (FEN, index, depth) => {\r\n  let legalMoves;\r\n  const type = Object.keys(pieces).find(\r\n    (key) => pieces[key] === FEN.board[index]\r\n  );\r\n  switch (type.toLowerCase()) {\r\n    case \"p\":\r\n      legalMoves = calculatePawnMoves(FEN, index);\r\n      break;\r\n    case \"r\":\r\n      legalMoves = calculateRookMoves(FEN, index);\r\n      break;\r\n    case \"n\":\r\n      legalMoves = calculateKnightMoves(FEN, index);\r\n      break;\r\n    case \"b\":\r\n      legalMoves = calculateBishopMoves(FEN, index);\r\n      break;\r\n    case \"q\":\r\n      legalMoves = calculateQueenMoves(FEN, index);\r\n      break;\r\n    case \"k\":\r\n      if (depth) return calculateCandidateKingMoves(FEN, index);\r\n      else return calculateKingMoves(FEN, index);\r\n    default:\r\n      return [];\r\n  }\r\n  if (depth) return legalMoves;\r\n\r\n  const { board } = FEN;\r\n  const color = getPieceColor(board[index]);\r\n  return legalMoves.filter((move) => {\r\n    return !isKingAttacked(\r\n      { ...FEN, board: movePiece(FEN.board, {from:index, to:move}) },\r\n      color\r\n    );\r\n  });\r\n};\r\n\r\nfunction calculatePawnMoves({ board, enPassant }, index) {\r\n  let rank = Math.floor(index / 8);\r\n  let file = index % 8;\r\n  const candidateMoves = [];\r\n  if (board[index] & pieceTypes.White) {\r\n    if (!isOccupied(board, index + 8)) candidateMoves.push(index + 8);\r\n    if (\r\n      rank === 1 &&\r\n      !isOccupied(board, index + 16) &&\r\n      !isOccupied(board, index + 8)\r\n    )\r\n      candidateMoves.push(index + 16);\r\n    if ((file > 0 && isOccupied(board, index + 7)) || index + 7 === enPassant)\r\n      candidateMoves.push(index + 7);\r\n    if ((file < 7 && isOccupied(board, index + 9)) || index + 9 === enPassant)\r\n      candidateMoves.push(index + 9);\r\n  } else {\r\n    if (!isOccupied(board, index - 8)) candidateMoves.push(index - 8);\r\n    if (\r\n      rank === 6 &&\r\n      !isOccupied(board, index - 16) &&\r\n      !isOccupied(board, index - 8)\r\n    )\r\n      candidateMoves.push(index - 16);\r\n    if ((file > 0 && isOccupied(board, index - 9)) || index - 9 === enPassant)\r\n      candidateMoves.push(index - 9);\r\n    if ((file < 7 && isOccupied(board, index - 7)) || index - 7 === enPassant)\r\n      candidateMoves.push(index - 7);\r\n  }\r\n\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board[index], board[move])\r\n  );\r\n\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateRookMoves({ board }, index) {\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  for (let i = -1; i >= -file; i--) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = 1; i < 8 - file; i++) {\r\n    if (isOccupied(board, index + i)) {\r\n      candidateMoves.push(index + i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + i);\r\n  }\r\n  for (let i = -1; i >= -rank; i--) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  for (let i = 1; i < 8 - rank; i++) {\r\n    if (isOccupied(board, index + 8 * i)) {\r\n      candidateMoves.push(index + 8 * i);\r\n      break;\r\n    }\r\n    candidateMoves.push(index + 8 * i);\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board[index], board[move])\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateBishopMoves({ board }, index) {\r\n  //  console.log(board);\r\n  const candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  // console.log(rank, file);\r\n  for (let i = -1; i >= -Math.min(file, rank); i--) {\r\n    //up and left\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(8 - rank, 8 - file); i++) {\r\n    //down and right\r\n    candidateMoves.push(index + i + i * 8);\r\n    if (isOccupied(board, index + i + i * 8)) break;\r\n  }\r\n  for (let i = -1; i >= 1 - Math.min(8 - file, 1 + rank); i--) {\r\n    //up and right\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  for (let i = 1; i < Math.min(file, 8 - rank); i++) {\r\n    //down and left\r\n    candidateMoves.push(index - i + i * 8);\r\n    if (isOccupied(board, index - i + i * 8)) break;\r\n  }\r\n  const legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board[index], board[move])\r\n  );\r\n  // console.log(legalMoves);\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateKnightMoves({ board }, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    if (rank > 1) candidateMoves.push(index - 17);\r\n    if (rank < 6) candidateMoves.push(index + 15);\r\n  }\r\n  if (file > 1) {\r\n    if (rank > 0) candidateMoves.push(index - 10);\r\n    if (rank < 7) candidateMoves.push(index + 6);\r\n  }\r\n  if (file < 6) {\r\n    if (rank > 0) candidateMoves.push(index - 6);\r\n    if (rank < 7) candidateMoves.push(index + 10);\r\n  }\r\n  if (file < 7) {\r\n    if (rank > 1) candidateMoves.push(index - 15);\r\n    if (rank < 6) candidateMoves.push(index + 17);\r\n  }\r\n  let legalMoves = candidateMoves.filter(\r\n    (move) => !isSameColor(board, index, move)\r\n  );\r\n  return legalMoves;\r\n}\r\n\r\nfunction calculateQueenMoves({ board }, index) {\r\n  return [\r\n    ...calculateBishopMoves({ board }, index),\r\n    ...calculateRookMoves({ board }, index),\r\n  ];\r\n}\r\n\r\nfunction calculateCandidateKingMoves(FEN, index) {\r\n  let candidateMoves = [];\r\n  const rank = Math.floor(index / 8);\r\n  const file = index % 8;\r\n  if (file > 0) {\r\n    candidateMoves.push(index - 1);\r\n    if (rank > 0) candidateMoves.push(index - 9);\r\n    if (rank < 7) candidateMoves.push(index + 7);\r\n  }\r\n  if (file < 7) {\r\n    candidateMoves.push(index + 1);\r\n    if (rank > 0) candidateMoves.push(index - 7);\r\n    if (rank < 7) candidateMoves.push(index + 9);\r\n  }\r\n  if (rank > 0) candidateMoves.push(index - 8);\r\n  if (rank < 7) candidateMoves.push(index + 8);\r\n\r\n  return candidateMoves.filter((move) => !isSameColor(FEN.board, index, move));\r\n}\r\n\r\nexport function calculateKingMoves(FEN, index) {\r\n  const { board, castling } = FEN;\r\n  const candidateMoves = calculateCandidateKingMoves(FEN, index);\r\n  const color = getPieceColor(board[index])\r\n  const legalMoves = candidateMoves.filter((move) => {\r\n    return !isKingAttacked(\r\n      { ...FEN, board: movePiece(FEN.board, {from:index, to:move}) },\r\n      color\r\n    );\r\n  });\r\n  if (!isKingAttacked(FEN, color)) {\r\n    //if king and rook haven't moved yet.\r\n    if (color === pieceTypes.White) {\r\n      if (\r\n        castling.includes(\"K\") &&\r\n        legalMoves.includes(5) &&\r\n        !isKingAttacked({ ...FEN, board: movePiece(FEN.board, {from:index, to:6}) }, color) &&\r\n        board[6] === 0\r\n      ) {\r\n        legalMoves.push(6);\r\n      }\r\n      if (\r\n        castling.includes(\"Q\") &&\r\n        legalMoves.includes(3) &&\r\n        board[2] === 0 &&\r\n        !isKingAttacked({ ...FEN, board: movePiece(FEN.board, {from:index, to:2}) }, color) &&\r\n        board[1] === 0\r\n      ) {\r\n        legalMoves.push(2);\r\n      }\r\n    } else {\r\n      if (\r\n        castling.includes(\"k\") &&\r\n        legalMoves.includes(61) &&\r\n        !isKingAttacked(\r\n          { ...FEN, board: movePiece(FEN.board, {from:index, to:62}) },\r\n          color\r\n        ) &&\r\n        board[62] === 0\r\n      ) {\r\n        legalMoves.push(62);\r\n      }\r\n      if (\r\n        castling.includes(\"q\") &&\r\n        legalMoves.includes(59) &&\r\n        board[58] === 0 &&\r\n        !isKingAttacked(\r\n          { ...FEN, board: movePiece(FEN.board, { from:index, to:58}) },\r\n          color\r\n        ) &&\r\n        board[57] === 0\r\n      ) {\r\n        legalMoves.push(58);\r\n      }\r\n    }\r\n  }\r\n  return legalMoves;\r\n}\r\n\r\nexport const calculateLegalMoves = (FEN, color, depth = 0) => {\r\n  const { board } = FEN;\r\n\r\n  const pieces = board\r\n    .map((piece, index) => (piece & color ? index : null))\r\n    .filter((piece) => piece !== null);\r\n  const moves = pieces\r\n    .map((index) => {\r\n      return calculateLegalMovesForPiece(FEN, index, depth);\r\n    })\r\n    .reduce((acc, val) => acc.concat(val), []);\r\n\r\n  return moves;\r\n};\r\n\r\n\r\nexport default calculateLegalMovesForPiece;\r\n\r\nexport function isKingAttacked(FEN, color) {\r\n  const index = FEN.board.indexOf(color | pieceTypes.King);\r\n  const opponentColor =\r\n    color & pieceTypes.White ? pieceTypes.Black : pieceTypes.White;\r\n  const opponentMoves = calculateLegalMoves(FEN, opponentColor, 1);\r\n\r\n  return opponentMoves.includes(index);\r\n}\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}