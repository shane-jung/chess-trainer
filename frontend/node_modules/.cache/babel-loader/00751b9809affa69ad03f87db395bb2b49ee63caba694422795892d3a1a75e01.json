{"ast":null,"code":"const calculateLegalMoves = (board, index) => {\n  let legalMoves = [];\n  const piece = board[index];\n  const color = piece & 0b10000 ? \"w\" : \"b\";\n  const type = Object.keys(pieces).find(key => pieces[key] === piece);\n  switch (type.toLowerCase()) {\n    case \"p\":\n      legalMoves = calculatePawnMoves(board, index);\n      break;\n    case \"r\":\n      legalMoves = calculateRookMoves(board, index);\n      break;\n    case \"n\":\n      legalMoves = calculateKnightMoves(board, index);\n      break;\n    case \"b\":\n      legalMoves = calculateBishopMoves(board, index);\n      break;\n    case \"q\":\n      legalMoves = calculateQueenMoves(board, index);\n      break;\n    case \"k\":\n      legalMoves = calculateKingMoves(board, index);\n      break;\n  }\n  return legalMoves;\n};\nfunction isOccupied(board, index) {\n  return board[index] !== 0;\n}\nfunction isSameColor(board, index1, index2) {\n  return board[index1] & board[index2] & 0b10000 || board[index1] & board[index2] & 0b1000;\n}\nfunction calculatePawnMoves(board, index) {\n  let rank = Math.floor(index / 8);\n  let file = index % 8;\n  const legalMoves = [];\n  const color = board[index] & 0b10000 ? \"w\" : \"b\";\n  if (color === \"b\") {\n    if (!isOccupied(board, index - 8)) legalMoves.push(index - 8);\n    if (rank === 6 && !isOccupied(board, index - 16)) legalMoves.push(index - 16);\n    if (file > 0 && isOccupied(board, index - 7) && !isSameColor(board, index, index - 7)) legalMoves.push(index - 7);\n    if (file < 7 && isOccupied(board, index - 9) && !isSameColor(board, index, index - 9)) legalMoves.push(index - 9);\n  } else {\n    if (!isOccupied(board, index + 8)) legalMoves.push(index + 8);\n    if (rank === 1 && !isOccupied(board, index + 16)) legalMoves.push(index + 16);\n    if (file > 0 && isOccupied(board, index + 9) && !isSameColor(board, index, index + 9)) legalMoves.push(index + 9);\n    if (file < 7 && isOccupied(board, index + 7) && !isSameColor(board, index, index + 7)) legalMoves.push(index + 7);\n  }\n  return legalMoves;\n}\nfunction calculateRookMoves(board, index) {\n  const legalMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    if (isOccupied(board, index + i)) {\n      if (!isSameColor(board, index, index + i)) legalMoves.push(index + i);\n      break;\n    }\n    legalMoves.push(index + i);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    if (isOccupied(board, index + i)) {\n      if (!isSameColor(board, index, index + i)) legalMoves.push(index + i);\n      break;\n    }\n    legalMoves.push(index + i);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    if (isOccupied(board, index + 8 * i)) {\n      if (!isSameColor(board, index, index + 8 * i)) legalMoves.push(index + 8 * i);\n      break;\n    }\n    legalMoves.push(index + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    if (isOccupied(board, index + 8 * i)) {\n      if (!isSameColor(board, index, index + 8 * i)) legalMoves.push(index + 8 * i);\n      break;\n    }\n    legalMoves.push(index + 8 * i);\n  }\n  return legalMoves;\n}\nfunction calculateBishopMoves(board, index) {\n  const legalMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  for (let i = -1; i >= -file; i--) {\n    // up and left\n    if (isOccupied(board, index + i + i * 8)) {\n      if (!isSameColor(board, index, index + i + i * 8)) legalMoves.push(index + i + i * 8);\n      break;\n    }\n    legalMoves.push(index + i + i * 8);\n  }\n  for (let i = 1; i < 8 - file; i++) {\n    //down and right\n    if (isOccupied(board, index + i + i * 8)) {\n      if (!isSameColor(board, index, index + i + i * 8)) legalMoves.push(index + i + i * 8);\n      break;\n    }\n    legalMoves.push(index + i + i * 8);\n  }\n  for (let i = -1; i >= -rank; i--) {\n    //up and right\n    if (isOccupied(board, index + 8 * i - i)) {\n      if (!isSameColor(board, index, index + 8 * i - i)) legalMoves.push(index + 8 * i - i);\n      break;\n    }\n    legalMoves.push(index - i + 8 * i);\n  }\n  for (let i = 1; i < 8 - rank; i++) {\n    //down and left\n    if (isOccupied(board, index + 8 * i - i)) {\n      if (!isSameColor(board, index, index + 8 * i - i)) legalMoves.push(index + 8 * i - i);\n      break;\n    }\n    legalMoves.push(index + 8 * i - i);\n  }\n  return legalMoves;\n}\nfunction calculateKnightMoves(board, index) {\n  let legalMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 1) {\n    if (rank > 0) legalMoves.push(index - 17);\n    if (rank < 7) legalMoves.push(index + 15);\n  }\n  if (file > 0) {\n    if (rank > 1) legalMoves.push(index - 10);\n    if (rank < 6) legalMoves.push(index + 6);\n  }\n  if (file < 7) {\n    if (rank > 1) legalMoves.push(index - 6);\n    if (rank < 6) legalMoves.push(index + 10);\n  }\n  if (file < 6) {\n    if (rank > 0) legalMoves.push(index - 15);\n    if (rank < 7) legalMoves.push(index + 17);\n  }\n  return legalMoves;\n}\nfunction calculateQueenMoves(board, index) {\n  return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\n}\nfunction calculateKingMoves(board, index) {\n  let legalMoves = [];\n  const rank = Math.floor(index / 8);\n  const file = index % 8;\n  if (file > 0) {\n    legalMoves.push(index - 1);\n    if (rank > 0) legalMoves.push(index - 9);\n    if (rank < 7) legalMoves.push(index + 7);\n  }\n  if (file < 7) {\n    legalMoves.push(index + 1);\n    if (rank > 0) legalMoves.push(index - 7);\n    if (rank < 7) legalMoves.push(index + 9);\n  }\n  if (rank > 0) legalMoves.push(index - 8);\n  if (rank < 7) legalMoves.push(index + 8);\n  return legalMoves;\n}\nexport default calculateLegalMoves;","map":{"version":3,"names":["calculateLegalMoves","board","index","legalMoves","piece","color","type","Object","keys","pieces","find","key","toLowerCase","calculatePawnMoves","calculateRookMoves","calculateKnightMoves","calculateBishopMoves","calculateQueenMoves","calculateKingMoves","isOccupied","isSameColor","index1","index2","rank","Math","floor","file","push","i"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/calculateMoves.js"],"sourcesContent":["const calculateLegalMoves = (board, index) => {\r\n    let legalMoves = [];\r\n  \r\n    const piece = board[index];\r\n    const color = piece & 0b10000 ? \"w\" : \"b\";\r\n    const type = Object.keys(pieces).find((key) => pieces[key] === piece);\r\n  \r\n    switch (type.toLowerCase()) {\r\n      case \"p\":\r\n        legalMoves = calculatePawnMoves(board, index);\r\n        break;\r\n      case \"r\":\r\n        legalMoves = calculateRookMoves(board, index);\r\n        break;\r\n      case \"n\":\r\n        legalMoves = calculateKnightMoves(board, index);\r\n        break;\r\n      case \"b\":\r\n        legalMoves = calculateBishopMoves(board, index);\r\n        break;\r\n      case \"q\":\r\n        legalMoves = calculateQueenMoves(board, index);\r\n        break;\r\n      case \"k\":\r\n        legalMoves = calculateKingMoves(board, index);\r\n        break;\r\n    }\r\n    return legalMoves;\r\n  };\r\n  \r\n  function isOccupied(board, index) {\r\n    return board[index] !== 0;\r\n  }\r\n  \r\n  function isSameColor(board, index1, index2) {\r\n    return (\r\n      board[index1] & board[index2] & 0b10000 ||\r\n      board[index1] & board[index2] & 0b1000\r\n    );\r\n  }\r\n  \r\n  function calculatePawnMoves(board, index) {\r\n    let rank = Math.floor(index / 8);\r\n    let file = index % 8;\r\n    const legalMoves = [];\r\n    const color = board[index] & 0b10000 ? \"w\" : \"b\";\r\n    if (color === \"b\") {\r\n      if(!isOccupied(board, index - 8)) legalMoves.push(index - 8);\r\n      if (rank === 6 && !isOccupied(board, index - 16)) legalMoves.push(index - 16);\r\n      if (file > 0 && isOccupied(board, index - 7) && !isSameColor(board, index, index - 7)) legalMoves.push(index - 7);\r\n      if (file < 7 && isOccupied(board, index - 9) && !isSameColor(board, index, index - 9)) legalMoves.push(index - 9);\r\n    } else {\r\n      if(!isOccupied(board, index + 8)) legalMoves.push(index + 8);\r\n      if (rank === 1 && !isOccupied(board, index + 16)) legalMoves.push(index + 16);\r\n      if (file > 0 && isOccupied(board, index + 9) && !isSameColor(board, index, index + 9)) legalMoves.push(index + 9);\r\n      if (file < 7 && isOccupied(board, index + 7) && !isSameColor(board, index, index + 7)) legalMoves.push(index + 7);\r\n    }\r\n    return legalMoves;\r\n  \r\n  }\r\n  \r\n  function calculateRookMoves(board, index) {\r\n    const legalMoves = [];\r\n    const rank = Math.floor(index / 8);\r\n    const file = index % 8;\r\n    for (let i = -1; i >= -file; i--) {\r\n      if (isOccupied(board, index + i)) {\r\n        if (!isSameColor(board, index, index + i)) legalMoves.push(index + i);\r\n        break;\r\n      }\r\n      legalMoves.push(index + i);\r\n    }\r\n    for (let i = 1; i < 8 - file; i++) {\r\n      if (isOccupied(board, index + i)) {\r\n        if (!isSameColor(board, index, index + i)) legalMoves.push(index + i);\r\n        break;\r\n      }\r\n      legalMoves.push(index + i);\r\n    }\r\n    for (let i = -1; i >= -rank; i--) {\r\n      if (isOccupied(board, index + 8 * i)) {\r\n        if (!isSameColor(board, index, index + 8 * i))\r\n          legalMoves.push(index + 8 * i);\r\n        break;\r\n      }\r\n      legalMoves.push(index + 8 * i);\r\n    }\r\n    for (let i = 1; i < 8 - rank; i++) {\r\n      if (isOccupied(board, index + 8 * i)) {\r\n        if (!isSameColor(board, index, index + 8 * i))\r\n          legalMoves.push(index + 8 * i);\r\n        break;\r\n      }\r\n      legalMoves.push(index + 8 * i);\r\n    }\r\n    return legalMoves;\r\n  }\r\n  \r\n  function calculateBishopMoves(board, index) {\r\n    const legalMoves = [];\r\n    const rank = Math.floor(index / 8);\r\n    const file = index % 8;\r\n    for (let i = -1; i >= -file; i--) {\r\n      // up and left\r\n      if (isOccupied(board, index + i + i * 8)) {\r\n        if (!isSameColor(board, index, index + i + i * 8))\r\n          legalMoves.push(index + i + i * 8);\r\n        break;\r\n      }\r\n      legalMoves.push(index + i + i * 8);\r\n    }\r\n    for (let i = 1; i < 8 - file; i++) {\r\n      //down and right\r\n      if (isOccupied(board, index + i + i * 8)) {\r\n        if (!isSameColor(board, index, index + i + i * 8))\r\n          legalMoves.push(index + i + i * 8);\r\n        break;\r\n      }\r\n      legalMoves.push(index + i + i * 8);\r\n    }\r\n    for (let i = -1; i >= -rank; i--) {\r\n      //up and right\r\n      if (isOccupied(board, index + 8 * i - i)) {\r\n        if (!isSameColor(board, index, index + 8 * i - i))\r\n          legalMoves.push(index + 8 * i - i);\r\n        break;\r\n      }\r\n      legalMoves.push(index - i + 8 * i);\r\n    }\r\n    for (let i = 1; i < 8 - rank; i++) {\r\n      //down and left\r\n      if (isOccupied(board, index + 8 * i - i)) {\r\n        if (!isSameColor(board, index, index + 8 * i - i))\r\n          legalMoves.push(index + 8 * i - i);\r\n        break;\r\n      }\r\n  \r\n      legalMoves.push(index + 8 * i - i);\r\n    }\r\n    return legalMoves;\r\n  }\r\n  \r\n  function calculateKnightMoves(board, index) {\r\n    let legalMoves = [];\r\n    const rank = Math.floor(index / 8);\r\n    const file = index % 8;\r\n    if (file > 1) {\r\n      if (rank > 0) legalMoves.push(index - 17);\r\n      if (rank < 7) legalMoves.push(index + 15);\r\n    }\r\n    if (file > 0) {\r\n      if (rank > 1) legalMoves.push(index - 10);\r\n      if (rank < 6) legalMoves.push(index + 6);\r\n    }\r\n    if (file < 7) {\r\n      if (rank > 1) legalMoves.push(index - 6);\r\n      if (rank < 6) legalMoves.push(index + 10);\r\n    }\r\n    if (file < 6) {\r\n      if (rank > 0) legalMoves.push(index - 15);\r\n      if (rank < 7) legalMoves.push(index + 17);\r\n    }\r\n    return legalMoves;\r\n  }\r\n  \r\n  \r\n  function calculateQueenMoves(board, index){\r\n    return [...calculateBishopMoves(board, index), ...calculateRookMoves(board, index)];\r\n  }\r\n  \r\n  function calculateKingMoves(board, index){\r\n    let legalMoves = [];\r\n    const rank = Math.floor(index / 8);\r\n    const file = index % 8;\r\n    if (file > 0) { \r\n      legalMoves.push(index - 1);\r\n      if (rank > 0) legalMoves.push(index - 9);\r\n      if (rank < 7) legalMoves.push(index + 7);\r\n    }\r\n    if (file < 7) {\r\n      legalMoves.push(index + 1);\r\n      if (rank > 0) legalMoves.push(index - 7);\r\n      if (rank < 7) legalMoves.push(index + 9);\r\n    }\r\n    if (rank > 0) legalMoves.push(index - 8);\r\n    if (rank < 7) legalMoves.push(index + 8);\r\n    return legalMoves;\r\n  \r\n  }\r\n\r\n  export default calculateLegalMoves;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}