{"ast":null,"code":"import { createSlice, current } from \"@reduxjs/toolkit\";\nimport { movePiece } from \"../utils\";\nconst gameReducer = createSlice({\n  name: \"game\",\n  initialState: {\n    turn: \"w\",\n    board: Array(64).fill(0),\n    selected: null,\n    legalMoves: [],\n    history: [],\n    moveNumber: 0,\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\n    FEN: {\n      board: Array(64).fill(0),\n      turn: \"w\",\n      castling: \"KQkq\",\n      enPassant: \"-\",\n      halfMoveClock: 0,\n      fullMoveNumber: 1\n    },\n    activePiece: null\n  },\n  reducers: {\n    setBoard: (state, action) => {\n      state.FEN = action.payload;\n    },\n    rotateTurn: (state, action) => {\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\n    },\n    setTurn: (state, action) => {\n      state.turn = action.payload;\n    },\n    setSelected: (state, action) => {\n      state.selected = action.payload;\n    },\n    setActivePiece: (state, action) => {\n      state.activePiece = action.payload;\n    },\n    setLegalMoves: (state, action) => {\n      state.legalMoves = action.payload;\n    },\n    setFen: (state, action) => {\n      state.FEN = action.payload;\n    },\n    recordMove: (state, action) => {\n      // console.log(capturedPiece);\n      state.moveNumber = state.history.length + 1;\n    },\n    setMoveNumber: (state, action) => {\n      const newMoveNumber = Math.max(0, Math.min(action.payload + state.moveNumber, state.history.length));\n      const diff = newMoveNumber - state.moveNumber;\n      for (let i = 0; i < Math.abs(diff); i += 1) {\n        const {\n          move,\n          notation,\n          capturedPiece\n        } = state.history[state.moveNumber + (diff < 0 ? -i - 1 : i)];\n        if (diff < 0) state.FEN.board = movePiece(current(state.FEN.board), move.to, move.from);else state.FEN.board = movePiece(current(state.FEN.board), move.from, move.to);\n      }\n      state.moveNumber = newMoveNumber;\n    }\n  }\n});\nexport const selectBoard = state => state.game.board;\nexport const selectTurn = state => state.game.turn;\nexport const selectSelected = state => state.game.selected;\nexport const selectLegalMoves = state => state.game.legalMoves;\nexport const selectHistory = state => state.game.history;\nexport const selectMoveNumber = state => state.game.moveNumber;\nexport const selectStringFEN = state => state.game.stringFEN;\nexport const selectFen = state => state.game.FEN;\nexport const selectActivePiece = state => state.game.activePiece;\nexport const {\n  setBoard,\n  setTurn,\n  setSelected,\n  setLegalMoves,\n  recordMove,\n  rotateTurn,\n  setMoveNumber\n} = gameReducer.actions;\nexport default gameReducer.reducer;","map":{"version":3,"names":["createSlice","current","movePiece","gameReducer","name","initialState","turn","board","Array","fill","selected","legalMoves","history","moveNumber","stringFEN","FEN","castling","enPassant","halfMoveClock","fullMoveNumber","activePiece","reducers","setBoard","state","action","payload","rotateTurn","setTurn","setSelected","setActivePiece","setLegalMoves","setFen","recordMove","length","setMoveNumber","newMoveNumber","Math","max","min","diff","i","abs","move","notation","capturedPiece","to","from","selectBoard","game","selectTurn","selectSelected","selectLegalMoves","selectHistory","selectMoveNumber","selectStringFEN","selectFen","selectActivePiece","actions","reducer"],"sources":["C:/Users/shane/Documents/Projects/chess-trainer/src/slices/game.js"],"sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nimport { movePiece } from \"../utils\";\r\n\r\nconst gameReducer = createSlice({\r\n  name: \"game\",\r\n  initialState: {\r\n    turn: \"w\",\r\n    board: Array(64).fill(0),\r\n    selected: null,\r\n    legalMoves: [],\r\n    history: [],\r\n    moveNumber: 0,\r\n    stringFEN: \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\",\r\n    FEN: {\r\n      board: Array(64).fill(0),\r\n      turn: \"w\",\r\n      castling: \"KQkq\",\r\n      enPassant: \"-\",\r\n      halfMoveClock: 0,\r\n      fullMoveNumber: 1,\r\n    },\r\n    activePiece: null,\r\n  },\r\n  reducers: {\r\n    setBoard: (state, action) => {\r\n      state.FEN = action.payload;\r\n    },\r\n    rotateTurn: (state, action) => {\r\n      state.turn = state.turn === \"w\" ? \"b\" : \"w\";\r\n    },\r\n    setTurn: (state, action) => {\r\n      state.turn = action.payload;\r\n    },\r\n    setSelected: (state, action) => {\r\n      state.selected = action.payload;\r\n    },\r\n    setActivePiece: (state, action) => {\r\n      state.activePiece = action.payload;\r\n    },\r\n    setLegalMoves: (state, action) => {\r\n      state.legalMoves = action.payload;\r\n    },\r\n\r\n    setFen: (state, action) => {\r\n      state.FEN = action.payload;\r\n    },\r\n\r\n    recordMove: (state, action) => {\r\n      // console.log(capturedPiece);\r\n      state.moveNumber = state.history.length + 1;\r\n\r\n    },\r\n\r\n    setMoveNumber: (state, action) => {\r\n      const newMoveNumber = Math.max(\r\n        0,\r\n        Math.min(action.payload + state.moveNumber, state.history.length)\r\n      );\r\n      const diff = newMoveNumber - state.moveNumber;\r\n      for (let i = 0; i < Math.abs(diff); i += 1) {\r\n        const { move, notation, capturedPiece } =\r\n          state.history[state.moveNumber + (diff < 0 ? -i - 1 : i)];\r\n        if (diff < 0)\r\n          state.FEN.board = movePiece(\r\n            current(state.FEN.board),\r\n            move.to,\r\n            move.from\r\n          );\r\n        else\r\n          state.FEN.board = movePiece(\r\n            current(state.FEN.board),\r\n            move.from,\r\n            move.to\r\n          );\r\n      }\r\n\r\n      state.moveNumber = newMoveNumber;\r\n    },\r\n  },\r\n});\r\n\r\nexport const selectBoard = (state) => state.game.board;\r\nexport const selectTurn = (state) => state.game.turn;\r\nexport const selectSelected = (state) => state.game.selected;\r\nexport const selectLegalMoves = (state) => state.game.legalMoves;\r\nexport const selectHistory = (state) => state.game.history;\r\nexport const selectMoveNumber = (state) => state.game.moveNumber;\r\nexport const selectStringFEN = (state) => state.game.stringFEN;\r\nexport const selectFen = (state) => state.game.FEN;\r\nexport const selectActivePiece = (state) => state.game.activePiece;\r\n\r\nexport const {\r\n  setBoard,\r\n  setTurn,\r\n  setSelected,\r\n  setLegalMoves,\r\n  recordMove,\r\n  rotateTurn,\r\n  setMoveNumber,\r\n} = gameReducer.actions;\r\n\r\nexport default gameReducer.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}